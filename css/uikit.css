
 /* ========================================================================
    Component: Card
  ========================================================================== */
 .uk-card {
   position: relative;
   box-sizing: border-box;
   transition: box-shadow 0.1s ease-in-out;
 }
 /* Sections
  ========================================================================== */
 .uk-card-body {
   display: flow-root;
   padding: 30px 30px;
 }
 .uk-card-header {
   display: flow-root;
   padding: 15px 30px;
 }
 .uk-card-footer {
   display: flow-root;
   padding: 15px 30px;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-card-body {
     padding: 40px 40px;
   }
   .uk-card-header {
     padding: 20px 40px;
   }
   .uk-card-footer {
     padding: 20px 40px;
   }
 }
 /*
  * Remove margin from the last-child
  */
 .uk-card-body > :last-child,
 .uk-card-header > :last-child,
 .uk-card-footer > :last-child {
   margin-bottom: 0;
 }
 /* Media
  ========================================================================== */
 /*
  * Reserved alignment modifier to style the media element, e.g. with `border-radius`
  * Implemented by the theme
  */
 /* Title
  ========================================================================== */
 .uk-card-title {
   font-size: 1.5rem;
   line-height: 1.4;
 }
 /* Badge
  ========================================================================== */
 .uk-card-badge {
   position: absolute;
   top: 30px;
   right: 30px;
   z-index: 1;
 }
 /*
  * Remove margin from adjacent element
  */
 .uk-card-badge:first-child + * {
   margin-top: 0;
 }
 /* Hover modifier
  ========================================================================== */
 .uk-card-hover:not(.uk-card-default):not(.uk-card-primary):not(.uk-card-secondary):hover {
   background: #fff;
   box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
 }
 /* Style modifiers
  ========================================================================== */
 /*
  * Default
  * Note: Header and Footer are only implemented for the default style
  */
 .uk-card-default {
   background: #fff;
   color: #666;
   box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
 }
 .uk-card-default .uk-card-title {
   color: #333;
 }
 .uk-card-default.uk-card-hover:hover {
   background-color: #fff;
   box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
 }
 .uk-card-default .uk-card-header {
   border-bottom: 1px solid #e5e5e5;
 }
 .uk-card-default .uk-card-footer {
   border-top: 1px solid #e5e5e5;
 }
 /*
  * Primary
  */
 .uk-card-primary {
   background: #1e87f0;
   color: #fff;
   box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
 }
 .uk-card-primary .uk-card-title {
   color: #fff;
 }
 .uk-card-primary.uk-card-hover:hover {
   background-color: #1e87f0;
   box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
 }
 /*
  * Secondary
  */
 .uk-card-secondary {
   background: #222;
   color: #fff;
   box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
 }
 .uk-card-secondary .uk-card-title {
   color: #fff;
 }
 .uk-card-secondary.uk-card-hover:hover {
   background-color: #222;
   box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
 }
 /* Size modifier
  ========================================================================== */
 /*
  * Small
  */
 .uk-card-small.uk-card-body,
 .uk-card-small .uk-card-body {
   padding: 20px 20px;
 }
 .uk-card-small .uk-card-header {
   padding: 13px 20px;
 }
 .uk-card-small .uk-card-footer {
   padding: 13px 20px;
 }
 /*
  * Large
  */
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-card-large.uk-card-body,
   .uk-card-large .uk-card-body {
     padding: 70px 70px;
   }
   .uk-card-large .uk-card-header {
     padding: 35px 70px;
   }
   .uk-card-large .uk-card-footer {
     padding: 35px 70px;
   }
 }
 /*
      * Default
      */
 .uk-card-body > .uk-nav-default {
   margin-left: -30px;
   margin-right: -30px;
 }
 .uk-card-body > .uk-nav-default:only-child {
   margin-top: -15px;
   margin-bottom: -15px;
 }
 .uk-card-body > .uk-nav-default > li > a,
 .uk-card-body > .uk-nav-default .uk-nav-header,
 .uk-card-body > .uk-nav-default .uk-nav-divider {
   padding-left: 30px;
   padding-right: 30px;
 }
 .uk-card-body > .uk-nav-default .uk-nav-sub {
   padding-left: 45px;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-card-body > .uk-nav-default {
     margin-left: -40px;
     margin-right: -40px;
   }
   .uk-card-body > .uk-nav-default:only-child {
     margin-top: -25px;
     margin-bottom: -25px;
   }
   .uk-card-body > .uk-nav-default > li > a,
   .uk-card-body > .uk-nav-default .uk-nav-header,
   .uk-card-body > .uk-nav-default .uk-nav-divider {
     padding-left: 40px;
     padding-right: 40px;
   }
   .uk-card-body > .uk-nav-default .uk-nav-sub {
     padding-left: 55px;
   }
 }
 /*
      * Small
      */
 .uk-card-small > .uk-nav-default {
   margin-left: -20px;
   margin-right: -20px;
 }
 .uk-card-small > .uk-nav-default:only-child {
   margin-top: -5px;
   margin-bottom: -5px;
 }
 .uk-card-small > .uk-nav-default > li > a,
 .uk-card-small > .uk-nav-default .uk-nav-header,
 .uk-card-small > .uk-nav-default .uk-nav-divider {
   padding-left: 20px;
   padding-right: 20px;
 }
 .uk-card-small > .uk-nav-default .uk-nav-sub {
   padding-left: 35px;
 }
 /*
      * Large
      */
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-card-large > .uk-nav-default {
     margin: 0;
   }
   .uk-card-large > .uk-nav-default:only-child {
     margin: 0;
   }
   .uk-card-large > .uk-nav-default > li > a,
   .uk-card-large > .uk-nav-default .uk-nav-header,
   .uk-card-large > .uk-nav-default .uk-nav-divider {
     padding-left: 0;
     padding-right: 0;
   }
   .uk-card-large > .uk-nav-default .uk-nav-sub {
     padding-left: 15px;
   }
 }
 /* ========================================================================
    Component: Close
  ========================================================================== */
 /*
  * Adopts `uk-icon`
  */
 .uk-close {
   color: #999;
   transition: 0.1s ease-in-out;
   transition-property: color, opacity;
 }
 /* Hover + Focus */
 .uk-close:hover,
 .uk-close:focus {
   color: #666;
   outline: none;
 }
 /* ========================================================================
    Component: Spinner
  ========================================================================== */
 /*
  * Adopts `uk-icon`
  */
 /* SVG
  ========================================================================== */
 .uk-spinner > * {
   animation: uk-spinner-rotate 1.4s linear infinite;
 }
 @keyframes uk-spinner-rotate {
   0% {
     transform: rotate(0deg);
   }
   100% {
     transform: rotate(270deg);
   }
 }
 /*
  * Circle
  */
 .uk-spinner > * > * {
   stroke-dasharray: 88px;
   stroke-dashoffset: 0;
   transform-origin: center;
   animation: uk-spinner-dash 1.4s ease-in-out infinite;
   stroke-width: 1;
   stroke-linecap: round;
 }
 @keyframes uk-spinner-dash {
   0% {
     stroke-dashoffset: 88px;
   }
   50% {
     stroke-dashoffset: 22px;
     transform: rotate(135deg);
   }
   100% {
     stroke-dashoffset: 88px;
     transform: rotate(450deg);
   }
 }
 /* ========================================================================
    Component: Totop
  ========================================================================== */
 /*
  * Addopts `uk-icon`
  */


 
 /* ========================================================================
    Component: Slideshow
  ========================================================================== */
 /*
  * 1. Prevent tab highlighting on iOS.
  */
 .uk-slideshow {
   /* 1 */
   -webkit-tap-highlight-color: transparent;
 }
 /* Items
  ========================================================================== */
 /*
  * 1. Create position and stacking context
  * 2. Reset list
  * 3. Clip child elements
  * 4. Prevent displaying the callout information on iOS.
  */
 .uk-slideshow-items {
   /* 1 */
   position: relative;
   z-index: 0;
   /* 2 */
   margin: 0;
   padding: 0;
   list-style: none;
   /* 3 */
   overflow: hidden;
   /* 4 */
   -webkit-touch-callout: none;
 }
 /* Item
  ========================================================================== */
 /*
  * 1. Position items above each other
  * 2. Take the full width
  * 3. Clip child elements, e.g. for `uk-cover`
  * 4. Optimize animation
  * 5. Disable horizontal panning gestures in IE11 and Edge
  * 6. Suppress outline on focus
  */
 .uk-slideshow-items > * {
   /* 1 */
   position: absolute;
   top: 0;
   left: 0;
   /* 2 */
   right: 0;
   bottom: 0;
   /* 3 */
   overflow: hidden;
   /* 4 */
   will-change: transform, opacity;
   /* 5 */
   touch-action: pan-y;
 }
 /* 6 */
 .uk-slideshow-items > :focus {
   outline: none;
 }
 /*
  * Hide not active items
  */
 .uk-slideshow-items > :not(.uk-active) {
   display: none;
 }
 /* ========================================================================
    Component: Slider
  ========================================================================== */
 /*
  * 1. Prevent tab highlighting on iOS.
  */
 .uk-slider {
   /* 1 */
   -webkit-tap-highlight-color: transparent;
 }
 /* Container
  ========================================================================== */
 /*
  * Clip child elements
  */
 .uk-slider-container {
   overflow: hidden;
 }
 /*
  * Widen container to prevent box-shadows from clipping, `large-box-shadow`
  */
 .uk-slider-container-offset {
   padding: 11px 25px 10px 25px;
 }
 /* Items
  ========================================================================== */
 /*
  * 1. Optimize animation
  * 2. Create a containing block. In Safari it's neither created by `transform` nor `will-change`.
  */
 .uk-slider-items {
   /* 1 */
   will-change: transform;
   /* 2 */
   position: relative;
 }
 /*
  * 1. Reset list style without interfering with grid
  * 2. Prevent displaying the callout information on iOS.
  */
 .uk-slider-items:not(.uk-grid) {
   display: flex;
   /* 1 */
   margin: 0;
   padding: 0;
   list-style: none;
   /* 2 */
   -webkit-touch-callout: none;
 }
 .uk-slider-items.uk-grid {
   flex-wrap: nowrap;
 }
 /* Item
  ========================================================================== */
 /*
  * 1. Let items take content dimensions (0 0 auto)
  * 2. Create position context
  * 3. Disable horizontal panning gestures in IE11 and Edge
  * 4. Suppress outline on focus
  */
 .uk-slider-items > * {
   /* 1 */
   flex: none;
   /* 2 */
   position: relative;
   /* 3 */
   touch-action: pan-y;
 }
 /* 4 */
 .uk-slider-items > :focus {
   outline: none;
 }
 /* ========================================================================
    Component: Sticky
  ========================================================================== */
 /*
  * 1. Resolve frame rate issues on devices with lower frame rates by forcing hardware acceleration
  */
 .uk-sticky-fixed {
   z-index: 980;
   box-sizing: border-box;
   margin: 0 !important;
   /* 1 */
   -webkit-backface-visibility: hidden;
   backface-visibility: hidden;
 }
 /*
  * Faster animations
  */
 .uk-sticky[class*='uk-animation-'] {
   animation-duration: 0.2s;
 }
 .uk-sticky.uk-animation-reverse {
   animation-duration: 0.2s;
 }
 /* ========================================================================
    Component: Off-canvas
  ========================================================================== */
 /*
  * 1. Hide by default
  * 2. Set position
  */
 .uk-offcanvas {
   /* 1 */
   display: none;
   /* 2 */
   position: fixed;
   top: 0;
   bottom: 0;
   left: 0;
   z-index: 1000;
 }
 /*
  * Flip modifier
  */
 .uk-offcanvas-flip .uk-offcanvas {
   right: 0;
   left: auto;
 }
 /* Bar
  ========================================================================== */
 /*
  * 1. Set position
  * 2. Size and style
  * 3. Allow scrolling
  */
 .uk-offcanvas-bar {
   /* 1 */
   position: absolute;
   top: 0;
   bottom: 0;
   left: -270px;
   /* 2 */
   box-sizing: border-box;
   width: 270px;
   padding: 20px 20px;
   background: #222;
   /* 3 */
   overflow-y: auto;
   -webkit-overflow-scrolling: touch;
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-offcanvas-bar {
     left: -350px;
     width: 350px;
     padding: 40px 40px;
   }
 }
 /* Flip modifier */
 .uk-offcanvas-flip .uk-offcanvas-bar {
   left: auto;
   right: -270px;
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-offcanvas-flip .uk-offcanvas-bar {
     right: -350px;
   }
 }
 /*
  * Open
  */
 .uk-open > .uk-offcanvas-bar {
   left: 0;
 }
 .uk-offcanvas-flip .uk-open > .uk-offcanvas-bar {
   left: auto;
   right: 0;
 }
 /*
  * Slide Animation (Used in slide and push mode)
  */
 .uk-offcanvas-bar-animation {
   transition: left 0.3s ease-out;
 }
 .uk-offcanvas-flip .uk-offcanvas-bar-animation {
   transition-property: right;
 }
 /*
  * Reveal Animation
  * 1. Set position
  * 2. Clip the bar
  * 3. Animation
  * 4. Reset position
  */
 .uk-offcanvas-reveal {
   /* 1 */
   position: absolute;
   top: 0;
   bottom: 0;
   left: 0;
   /* 2 */
   width: 0;
   overflow: hidden;
   /* 3 */
   transition: width 0.3s ease-out;
 }
 .uk-offcanvas-reveal .uk-offcanvas-bar {
   /* 4 */
   left: 0;
 }
 .uk-offcanvas-flip .uk-offcanvas-reveal .uk-offcanvas-bar {
   /* 4 */
   left: auto;
   right: 0;
 }
 .uk-open > .uk-offcanvas-reveal {
   width: 270px;
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-open > .uk-offcanvas-reveal {
     width: 350px;
   }
 }
 /*
  * Flip modifier
  */
 .uk-offcanvas-flip .uk-offcanvas-reveal {
   right: 0;
   left: auto;
 }
 /* Close
  * Adopts `uk-close`
  ========================================================================== */
 .uk-offcanvas-close {
   position: absolute;
   z-index: 1000;
   top: 20px;
   right: 20px;
   padding: 5px;
 }
 /* Overlay
  ========================================================================== */
 /*
  * Overlay the whole page. Needed for the `::before`
  * 1. Using `100vw` so no modification is needed when off-canvas is flipped
  * 2. Allow for closing with swipe gesture on devices with pointer events.
  */
 .uk-offcanvas-overlay {
   /* 1 */
   width: 100vw;
   /* 2 */
   touch-action: none;
 }
 /*
  * 1. Mask the whole page
  * 2. Fade-in transition
  */
 .uk-offcanvas-overlay::before {
   /* 1 */
   content: "";
   position: absolute;
   top: 0;
   bottom: 0;
   left: 0;
   right: 0;
   background: rgba(0, 0, 0, 0.1);
   /* 2 */
   opacity: 0;
   transition: opacity 0.15s linear;
 }
 .uk-offcanvas-overlay.uk-open::before {
   opacity: 1;
 }
 /* Prevent scrolling
  ========================================================================== */
 /*
  * Prevent horizontal scrollbar when the content is slide-out
  * Has to be on the `html` element too to make it work on the `body`
  */
 .uk-offcanvas-page,
 .uk-offcanvas-container {
   overflow-x: hidden;
 }
 /* Container
  ========================================================================== */
 /*
  * Prepare slide-out animation (Used in reveal and push mode)
  * Using `position: left` instead of `transform` because position `fixed` elements like sticky navbars
  * lose their fixed state and behaves like `absolute` within a transformed container
  * 1. Provide a fixed width and prevent shrinking
  */
 .uk-offcanvas-container {
   position: relative;
   left: 0;
   transition: left 0.3s ease-out;
   /* 1 */
   box-sizing: border-box;
   width: 100%;
 }
 /*
  * Activate slide-out animation
  */
 :not(.uk-offcanvas-flip).uk-offcanvas-container-animation {
   left: 270px;
 }
 .uk-offcanvas-flip.uk-offcanvas-container-animation {
   left: -270px;
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   :not(.uk-offcanvas-flip).uk-offcanvas-container-animation {
     left: 350px;
   }
   .uk-offcanvas-flip.uk-offcanvas-container-animation {
     left: -350px;
   }
 }
 /* ========================================================================
    Component: Switcher
  ========================================================================== */
 /*
  * Reset list
  */
 .uk-switcher {
   margin: 0;
   padding: 0;
   list-style: none;
 }
 /* Items
  ========================================================================== */
 /*
  * Hide not active items
  */
 .uk-switcher > :not(.uk-active) {
   display: none;
 }
 /*
  * Remove margin from the last-child
  */
 .uk-switcher > * > :last-child {
   margin-bottom: 0;
 }
 /* ========================================================================
    Component: Leader
  ========================================================================== */
 .uk-leader {
   overflow: hidden;
 }
 /*
  * 1. Place element in text flow
  * 2. Never break into a new line
  * 3. Get a string back with as many repeating characters to fill the container
  * 4. Prevent wrapping. Overflowing characters will be clipped by the container
  */
 .uk-leader-fill::after {
   /* 1 */
   display: inline-block;
   margin-left: 15px;
   /* 2 */
   width: 0;
   /* 3 */
   content: attr(data-fill);
   /* 4 */
   white-space: nowrap;
 }
 /*
  * Hide if media does not match
  */
 .uk-leader-fill.uk-leader-hide::after {
   display: none;
 }
 /*
  * Pass fill character to JS
  */
 .uk-leader-fill-content::before {
   content: '.';
 }
 :root {
   --uk-leader-fill-content: .;
 }
 /* ========================================================================
    Component: Notification
  ========================================================================== */
 /*
  * 1. Set position
  * 2. Dimensions
  */
 .uk-notification {
   /* 1 */
   position: fixed;
   top: 10px;
   left: 10px;
   z-index: 1040;
   /* 2 */
   box-sizing: border-box;
   width: 350px;
 }
 /* Position modifiers
 ========================================================================== */
 .uk-notification-top-right,
 .uk-notification-bottom-right {
   left: auto;
   right: 10px;
 }
 .uk-notification-top-center,
 .uk-notification-bottom-center {
   left: 50%;
   margin-left: -175px;
 }
 .uk-notification-bottom-left,
 .uk-notification-bottom-right,
 .uk-notification-bottom-center {
   top: auto;
   bottom: 10px;
 }
 /* Responsiveness
 ========================================================================== */
 /* Phones portrait and smaller */
 @media (max-width: 639px) {
   .uk-notification {
     left: 10px;
     right: 10px;
     width: auto;
     margin: 0;
   }
 }
 /* Message
 ========================================================================== */
 .uk-notification-message {
   position: relative;
   padding: 15px;
   background: #f8f8f8;
   color: #666;
   font-size: 1.25rem;
   line-height: 1.4;
   cursor: pointer;
 }
 * + .uk-notification-message {
   margin-top: 10px;
 }
 /* Close
  * Adopts `uk-close`
  ========================================================================== */
 .uk-notification-close {
   display: none;
   position: absolute;
   top: 20px;
   right: 15px;
 }
 .uk-notification-message:hover .uk-notification-close {
   display: block;
 }
 /* Style modifiers
  ========================================================================== */
 /*
  * Primary
  */
 .uk-notification-message-primary {
   color: #1e87f0;
 }
 /*
  * Success
  */
 .uk-notification-message-success {
   color: #32d296;
 }
 /*
  * Warning
  */
 .uk-notification-message-warning {
   color: #faa05a;
 }
 /*
  * Danger
  */
 .uk-notification-message-danger {
   color: #f0506e;
 }
 /* ========================================================================
    Component: Tooltip
  ========================================================================== */
 /*
  * 1. Hide by default
  * 2. Position
  * 3. Remove tooltip from document flow to keep the UIkit container from changing its size when injected into the document initially
  * 4. Dimensions
  * 5. Style
  */
 .uk-tooltip {
   /* 1 */
   display: none;
   /* 2 */
   position: absolute;
   z-index: 1030;
   /* 3 */
   top: 0;
   /* 4 */
   box-sizing: border-box;
   max-width: 200px;
   padding: 3px 6px;
   /* 5 */
   background: #666;
   border-radius: 2px;
   color: #fff;
   font-size: 12px;
 }
 /* Show */
 .uk-tooltip.uk-active {
   display: block;
 }
 /* Direction / Alignment modifiers
  ========================================================================== */
 /* Direction */
 [class*='uk-tooltip-top'] {
   margin-top: -10px;
 }
 [class*='uk-tooltip-bottom'] {
   margin-top: 10px;
 }
 [class*='uk-tooltip-left'] {
   margin-left: -10px;
 }
 [class*='uk-tooltip-right'] {
   margin-left: 10px;
 }
 /* ========================================================================
    Component: Sortable
  ========================================================================== */
 .uk-sortable {
   position: relative;
 }
 /*
  * Remove margin from the last-child
  */
 .uk-sortable > :last-child {
   margin-bottom: 0;
 }
 /* Drag
  ========================================================================== */
 .uk-sortable-drag {
   position: fixed !important;
   z-index: 1050 !important;
   pointer-events: none;
 }
 /* Placeholder
  ========================================================================== */
 .uk-sortable-placeholder {
   opacity: 0;
   pointer-events: none;
 }
 /* Empty modifier
  ========================================================================== */
 .uk-sortable-empty {
   min-height: 50px;
 }
 /* Handle
  ========================================================================== */
 /* Hover */
 .uk-sortable-handle:hover {
   cursor: move;
 }
 /* ========================================================================
    Component: Countdown
  ========================================================================== */
 /* Item
  ========================================================================== */
 /* Number
  ========================================================================== */
 /*
  * 1. Make numbers all of the same size to prevent jumping. Must be supported by the font.
  * 2. Style
  */
 .uk-countdown-number {
   /* 1 */
   font-variant-numeric: tabular-nums;
   /* 2 */
   font-size: 2rem;
   line-height: 0.8;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   .uk-countdown-number {
     font-size: 4rem;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-countdown-number {
     font-size: 6rem;
   }
 }
 /* Separator
  ========================================================================== */
 .uk-countdown-separator {
   font-size: 1rem;
   line-height: 1.6;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   .uk-countdown-separator {
     font-size: 2rem;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-countdown-separator {
     font-size: 3rem;
   }
 }
 /* Label
  ========================================================================== */
 /* ========================================================================
    Component: Grid
  ========================================================================== */
 /*
  * 1. Allow cells to wrap into the next line
  * 2. Reset list
  */
 .uk-grid {
   display: flex;
   /* 1 */
   flex-wrap: wrap;
   /* 2 */
   margin: 0;
   padding: 0;
   list-style: none;
 }
 /*
  * Grid cell
  * Note: Space is allocated solely based on content dimensions, but shrinks: 0 1 auto
  * Reset margin for e.g. paragraphs
  */
 .uk-grid > * {
   margin: 0;
 }
 /*
  * Remove margin from the last-child
  */
 .uk-grid > * > :last-child {
   margin-bottom: 0;
 }
 /* Gutter
  ========================================================================== */
 /*
  * Default
  */
 /* Horizontal */
 .uk-grid {
   margin-left: -30px;
 }
 .uk-grid > * {
   padding-left: 0px;
 }
 /* Vertical */
 .uk-grid + .uk-grid,
 .uk-grid > .uk-grid-margin,
 * + .uk-grid-margin {
   margin-top: 30px;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   /* Horizontal */
   .uk-grid {
     margin-left: -40px;
   }
   .uk-grid > * {
     padding-left: 0px;
   }
   /* Vertical */
   .uk-grid + .uk-grid,
   .uk-grid > .uk-grid-margin,
   * + .uk-grid-margin {
     margin-top: 40px;
   }
 }
 /*
  * Small
  */
 /* Horizontal */
 .uk-grid-small,
 .uk-grid-column-small {
   margin-left: -15px;
 }
 .uk-grid-small > *,
 .uk-grid-column-small > * {
   padding-left: 15px;
 }
 /* Vertical */
 .uk-grid + .uk-grid-small,
 .uk-grid + .uk-grid-row-small,
 .uk-grid-small > .uk-grid-margin,
 .uk-grid-row-small > .uk-grid-margin,
 * + .uk-grid-margin-small {
   margin-top: 15px;
 }
 /*
  * Medium
  */
 /* Horizontal */
 .uk-grid-medium,
 .uk-grid-column-medium {
   margin-left: -30px;
 }
 .uk-grid-medium > *,
 .uk-grid-column-medium > * {
   padding-left: 30px;
 }
 /* Vertical */
 .uk-grid + .uk-grid-medium,
 .uk-grid + .uk-grid-row-medium,
 .uk-grid-medium > .uk-grid-margin,
 .uk-grid-row-medium > .uk-grid-margin,
 * + .uk-grid-margin-medium {
   margin-top: 30px;
 }
 /*
  * Large
  */
 /* Horizontal */
 .uk-grid-large,
 .uk-grid-column-large {
   margin-left: -40px;
 }
 .uk-grid-large > *,
 .uk-grid-column-large > * {
   padding-left: 40px;
 }
 /* Vertical */
 .uk-grid + .uk-grid-large,
 .uk-grid + .uk-grid-row-large,
 .uk-grid-large > .uk-grid-margin,
 .uk-grid-row-large > .uk-grid-margin,
 * + .uk-grid-margin-large {
   margin-top: 40px;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   /* Horizontal */
   .uk-grid-large,
   .uk-grid-column-large {
     margin-left: -70px;
   }
   .uk-grid-large > *,
   .uk-grid-column-large > * {
     padding-left: 70px;
   }
   /* Vertical */
   .uk-grid + .uk-grid-large,
   .uk-grid + .uk-grid-row-large,
   .uk-grid-large > .uk-grid-margin,
   .uk-grid-row-large > .uk-grid-margin,
   * + .uk-grid-margin-large {
     margin-top: 70px;
   }
 }
 /*
  * Collapse
  */
 /* Horizontal */
 .uk-grid-collapse,
 .uk-grid-column-collapse {
   margin-left: 0;
 }
 .uk-grid-collapse > *,
 .uk-grid-column-collapse > * {
   padding-left: 0;
 }
 /* Vertical */
 .uk-grid + .uk-grid-collapse,
 .uk-grid + .uk-grid-row-collapse,
 .uk-grid-collapse > .uk-grid-margin,
 .uk-grid-row-collapse > .uk-grid-margin {
   margin-top: 0;
 }
 /* Divider
  ========================================================================== */
 .uk-grid-divider > * {
   position: relative;
 }
 .uk-grid-divider > :not(.uk-first-column)::before {
   content: "";
   position: absolute;
   top: 0;
   bottom: 0;
   border-left: 1px solid #e5e5e5;
 }
 /* Vertical */
 .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before {
   content: "";
   position: absolute;
   left: 0;
   right: 0;
   border-top: 1px solid #e5e5e5;
 }
 /*
  * Default
  */
 /* Horizontal */
 .uk-grid-divider {
   margin-left: -60px;
 }
 .uk-grid-divider > * {
   padding-left: 60px;
 }
 .uk-grid-divider > :not(.uk-first-column)::before {
   left: 30px;
 }
 /* Vertical */
 .uk-grid-divider.uk-grid-stack > .uk-grid-margin {
   margin-top: 60px;
 }
 .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before {
   top: -30px;
   left: 60px;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   /* Horizontal */
   .uk-grid-divider {
     margin-left: -80px;
   }
   .uk-grid-divider > * {
     padding-left: 80px;
   }
   .uk-grid-divider > :not(.uk-first-column)::before {
     left: 40px;
   }
   /* Vertical */
   .uk-grid-divider.uk-grid-stack > .uk-grid-margin {
     margin-top: 80px;
   }
   .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before {
     top: -40px;
     left: 80px;
   }
 }
 /*
  * Small
  */
 /* Horizontal */
 .uk-grid-divider.uk-grid-small,
 .uk-grid-divider.uk-grid-column-small {
   margin-left: -30px;
 }
 .uk-grid-divider.uk-grid-small > *,
 .uk-grid-divider.uk-grid-column-small > * {
   padding-left: 30px;
 }
 .uk-grid-divider.uk-grid-small > :not(.uk-first-column)::before,
 .uk-grid-divider.uk-grid-column-small > :not(.uk-first-column)::before {
   left: 15px;
 }
 /* Vertical */
 .uk-grid-divider.uk-grid-small.uk-grid-stack > .uk-grid-margin,
 .uk-grid-divider.uk-grid-row-small.uk-grid-stack > .uk-grid-margin {
   margin-top: 30px;
 }
 .uk-grid-divider.uk-grid-small.uk-grid-stack > .uk-grid-margin::before {
   top: -15px;
   left: 30px;
 }
 .uk-grid-divider.uk-grid-row-small.uk-grid-stack > .uk-grid-margin::before {
   top: -15px;
 }
 .uk-grid-divider.uk-grid-column-small.uk-grid-stack > .uk-grid-margin::before {
   left: 30px;
 }
 /*
  * Medium
  */
 /* Horizontal */
 .uk-grid-divider.uk-grid-medium,
 .uk-grid-divider.uk-grid-column-medium {
   margin-left: -60px;
 }
 .uk-grid-divider.uk-grid-medium > *,
 .uk-grid-divider.uk-grid-column-medium > * {
   padding-left: 60px;
 }
 .uk-grid-divider.uk-grid-medium > :not(.uk-first-column)::before,
 .uk-grid-divider.uk-grid-column-medium > :not(.uk-first-column)::before {
   left: 30px;
 }
 /* Vertical */
 .uk-grid-divider.uk-grid-medium.uk-grid-stack > .uk-grid-margin,
 .uk-grid-divider.uk-grid-row-medium.uk-grid-stack > .uk-grid-margin {
   margin-top: 60px;
 }
 .uk-grid-divider.uk-grid-medium.uk-grid-stack > .uk-grid-margin::before {
   top: -30px;
   left: 60px;
 }
 .uk-grid-divider.uk-grid-row-medium.uk-grid-stack > .uk-grid-margin::before {
   top: -30px;
 }
 .uk-grid-divider.uk-grid-column-medium.uk-grid-stack > .uk-grid-margin::before {
   left: 60px;
 }
 /*
  * Large
  */
 /* Horizontal */
 .uk-grid-divider.uk-grid-large,
 .uk-grid-divider.uk-grid-column-large {
   margin-left: -80px;
 }
 .uk-grid-divider.uk-grid-large > *,
 .uk-grid-divider.uk-grid-column-large > * {
   padding-left: 80px;
 }
 .uk-grid-divider.uk-grid-large > :not(.uk-first-column)::before,
 .uk-grid-divider.uk-grid-column-large > :not(.uk-first-column)::before {
   left: 40px;
 }
 /* Vertical */
 .uk-grid-divider.uk-grid-large.uk-grid-stack > .uk-grid-margin,
 .uk-grid-divider.uk-grid-row-large.uk-grid-stack > .uk-grid-margin {
   margin-top: 80px;
 }
 .uk-grid-divider.uk-grid-large.uk-grid-stack > .uk-grid-margin::before {
   top: -40px;
   left: 80px;
 }
 .uk-grid-divider.uk-grid-row-large.uk-grid-stack > .uk-grid-margin::before {
   top: -40px;
 }
 .uk-grid-divider.uk-grid-column-large.uk-grid-stack > .uk-grid-margin::before {
   left: 80px;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   /* Horizontal */
   .uk-grid-divider.uk-grid-large,
   .uk-grid-divider.uk-grid-column-large {
     margin-left: -140px;
   }
   .uk-grid-divider.uk-grid-large > *,
   .uk-grid-divider.uk-grid-column-large > * {
     padding-left: 140px;
   }
   .uk-grid-divider.uk-grid-large > :not(.uk-first-column)::before,
   .uk-grid-divider.uk-grid-column-large > :not(.uk-first-column)::before {
     left: 70px;
   }
   /* Vertical */
   .uk-grid-divider.uk-grid-large.uk-grid-stack > .uk-grid-margin,
   .uk-grid-divider.uk-grid-row-large.uk-grid-stack > .uk-grid-margin {
     margin-top: 140px;
   }
   .uk-grid-divider.uk-grid-large.uk-grid-stack > .uk-grid-margin::before {
     top: -70px;
     left: 140px;
   }
   .uk-grid-divider.uk-grid-row-large.uk-grid-stack > .uk-grid-margin::before {
     top: -70px;
   }
   .uk-grid-divider.uk-grid-column-large.uk-grid-stack > .uk-grid-margin::before {
     left: 140px;
   }
 }
 /* Match child of a grid cell
  ========================================================================== */
 /*
  * Behave like a block element
  * 1. Wrap into the next line
  * 2. Take the full width, at least 100%. Only if no class from the Width component is set.
  * 3. Expand width even if larger than 100%, e.g. because of negative margin (Needed for nested grids)
  */
 .uk-grid-match > *,
 .uk-grid-item-match {
   display: flex;
   /* 1 */
   flex-wrap: wrap;
 }
 .uk-grid-match > * > :not([class*='uk-width']),
 .uk-grid-item-match > :not([class*='uk-width']) {
   /* 2 */
   box-sizing: border-box;
   width: 100%;
   /* 3 */
   flex: auto;
 }
 /* ========================================================================
    Component: Nav
  ========================================================================== */
 /*
  * Reset
  * 1. Prepare lists
  * 2. Prepare links
  * 3. Remove default focus style
  */
 /* 1 */
 .uk-nav,
 .uk-nav ul {
   margin: 0;
   padding: 0;
   list-style: none;
 }
 /* 2 */
 .uk-nav li > a {
   display: block;
   text-decoration: none;
 }
 /* 3 */
 .uk-nav li > a:focus {
   outline: none;
 }
 /*
  * Items
  * Must target `a` elements to exclude other elements (e.g. lists)
  */
 .uk-nav > li > a {
   padding: 5px 0;
 }
 /* Sublists
  ========================================================================== */
 /*
  * Level 2
  * `ul` needed for higher specificity to override padding
  */
 ul.uk-nav-sub {
   padding: 5px 0 5px 15px;
 }
 /*
  * Level 3 and deeper
  */
 .uk-nav-sub ul {
   padding-left: 15px;
 }
 /*
  * Items
  */
 .uk-nav-sub a {
   padding: 2px 0;
 }
 /* Parent icon modifier
  ========================================================================== */
 .uk-nav-parent-icon > .uk-parent > a::after {
   content: "";
   width: 1.5em;
   height: 1.5em;
   float: right;
   background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2214%22%20height%3D%2214%22%20viewBox%3D%220%200%2014%2014%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolyline%20fill%3D%22none%22%20stroke%3D%22%23666%22%20stroke-width%3D%221.1%22%20points%3D%2210%201%204%207%2010%2013%22%20%2F%3E%0A%3C%2Fsvg%3E");
   background-repeat: no-repeat;
   background-position: 50% 50%;
 }
 .uk-nav-parent-icon > .uk-parent.uk-open > a::after {
   background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2214%22%20height%3D%2214%22%20viewBox%3D%220%200%2014%2014%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolyline%20fill%3D%22none%22%20stroke%3D%22%23666%22%20stroke-width%3D%221.1%22%20points%3D%221%204%207%2010%2013%204%22%20%2F%3E%0A%3C%2Fsvg%3E");
 }
 /* Header
  ========================================================================== */
 .uk-nav-header {
   padding: 5px 0;
   text-transform: uppercase;
   font-size: 0.875rem;
 }
 .uk-nav-header:not(:first-child) {
   margin-top: 20px;
 }
 /* Divider
  ========================================================================== */
 .uk-nav-divider {
   margin: 5px 0;
 }
 /* Default modifier
  ========================================================================== */
 .uk-nav-default {
   font-size: 0.875rem;
 }
 /*
  * Items
  */
 .uk-nav-default > li > a {
   color: #999;
 }
 /* Hover + Focus */
 .uk-nav-default > li > a:hover,
 .uk-nav-default > li > a:focus {
   color: #666;
 }
 /* Active */
 .uk-nav-default > li.uk-active > a {
   color: #333;
 }
 /*
  * Header
  */
 .uk-nav-default .uk-nav-header {
   color: #333;
 }
 /*
  * Divider
  */
 .uk-nav-default .uk-nav-divider {
   border-top: 1px solid #e5e5e5;
 }
 /*
  * Sublists
  */
 .uk-nav-default .uk-nav-sub a {
   color: #999;
 }
 .uk-nav-default .uk-nav-sub a:hover,
 .uk-nav-default .uk-nav-sub a:focus {
   color: #666;
 }
 .uk-nav-default .uk-nav-sub li.uk-active > a {
   color: #333;
 }
 /* Primary modifier
  ========================================================================== */
 /*
  * Items
  */
 .uk-nav-primary > li > a {
   font-size: 1.5rem;
   line-height: 1.5;
   color: #999;
 }
 /* Hover + Focus */
 .uk-nav-primary > li > a:hover,
 .uk-nav-primary > li > a:focus {
   color: #666;
 }
 /* Active */
 .uk-nav-primary > li.uk-active > a {
   color: #333;
 }
 /*
  * Header
  */
 .uk-nav-primary .uk-nav-header {
   color: #333;
 }
 /*
  * Divider
  */
 .uk-nav-primary .uk-nav-divider {
   border-top: 1px solid #e5e5e5;
 }
 /*
  * Sublists
  */
 .uk-nav-primary .uk-nav-sub a {
   color: #999;
 }
 .uk-nav-primary .uk-nav-sub a:hover,
 .uk-nav-primary .uk-nav-sub a:focus {
   color: #666;
 }
 .uk-nav-primary .uk-nav-sub li.uk-active > a {
   color: #333;
 }
 /* Alignment modifier
  ========================================================================== */
 .uk-nav-center {
   text-align: center;
 }
 /* Sublists */
 .uk-nav-center .uk-nav-sub,
 .uk-nav-center .uk-nav-sub ul {
   padding-left: 0;
 }
 /* Parent icon modifier  */
 .uk-nav-center.uk-nav-parent-icon > .uk-parent > a::after {
   position: absolute;
 }
 /* ========================================================================
    Component: Navbar
  ========================================================================== */
 /*
  * 1. Create position context to center navbar group
  */
 .uk-navbar {
   display: flex;
   /* 1 */
   position: relative;
 }
 /* Container
  ========================================================================== */
 .uk-navbar-container:not(.uk-navbar-transparent) {
   background: #f8f8f8;
 }
 /*
  * Remove pseudo elements created by micro clearfix as precaution (if Container component is used)
  */
 .uk-navbar-container > ::before,
 .uk-navbar-container > ::after {
   display: none !important;
 }
 /* Groups
  ========================================================================== */
 /*
  * 1. Align navs and items vertically if they have a different height
  * 2. Note: IE 11 requires an extra `div` which affects the center selector
  */
 .uk-navbar-left,
 .uk-navbar-right,
 .uk-navbar-center,
 .uk-navbar-center-left > *,
 .uk-navbar-center-right > * {
   display: flex;
   /* 1 */
   align-items: center;
 }
 /*
  * Horizontal alignment
  * 1. Create position context for centered navbar with sub groups (left/right)
  * 2. Fix text wrapping if content is larger than 50% of the container.
  * 3. Needed for dropdowns because a new position context is created
  *    `z-index` must be smaller than off-canvas
  * 4. Align sub groups for centered navbar
  */
 .uk-navbar-right {
   margin-left: auto;
 }
 .uk-navbar-center:only-child {
   margin-left: auto;
   margin-right: auto;
   /* 1 */
   position: relative;
 }
 .uk-navbar-center:not(:only-child) {
   position: absolute;
   top: 50%;
   left: 50%;
   transform: translate(-50%, -50%);
   /* 2 */
   width: max-content;
   box-sizing: border-box;
   /* 3 */
   z-index: 990;
 }
 /* 4 */
 .uk-navbar-center-left,
 .uk-navbar-center-right {
   position: absolute;
   top: 0;
 }
 .uk-navbar-center-left {
   right: 100%;
 }
 .uk-navbar-center-right {
   left: 100%;
 }
 [class*='uk-navbar-center-'] {
   width: max-content;
   box-sizing: border-box;
 }
 /* Nav
  ========================================================================== */
 /*
  * 1. Reset list
  */
 .uk-navbar-nav {
   display: flex;
   /* 1 */
   margin: 0;
   padding: 0;
   list-style: none;
 }
 /*
  * Allow items to wrap into the next line
  * Only not `absolute` positioned groups
  */
 .uk-navbar-left,
 .uk-navbar-right,
 .uk-navbar-center:only-child {
   flex-wrap: wrap;
 }
 /*
  * Items
  * 1. Center content vertically and horizontally
  * 2. Dimensions
  * 3. Style
  * 4. Required for `a`
  */
 .uk-navbar-nav > li > a,
 .uk-navbar-item,
 .uk-navbar-toggle {
   /* 1 */
   display: flex;
   justify-content: center;
   align-items: center;
   /* 2 */
   box-sizing: border-box;
   min-height: 80px;
   padding: 0 15px;
   /* 3 */
   font-size: 0.875rem;
   font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
   /* 4 */
   text-decoration: none;
 }
 /*
  * Nav items
  */
 .uk-navbar-nav > li > a {
   color: #999;
   text-transform: uppercase;
   transition: 0.1s ease-in-out;
   transition-property: color, background-color;
 }
 /*
  * Hover
  * Apply hover style also to focus state and if dropdown is opened
  */
 .uk-navbar-nav > li:hover > a,
 .uk-navbar-nav > li > a:focus,
 .uk-navbar-nav > li > a.uk-open {
   color: #666;
   outline: none;
 }
 /* OnClick */
 .uk-navbar-nav > li > a:active {
   color: #333;
 }
 /* Active */
 .uk-navbar-nav > li.uk-active > a {
   color: #333;
 }
 /* Item
  ========================================================================== */
 .uk-navbar-item {
   color: #666;
 }
 /* Toggle
  ========================================================================== */
 .uk-navbar-toggle {
   color: #999;
 }
 .uk-navbar-toggle:hover,
 .uk-navbar-toggle:focus,
 .uk-navbar-toggle.uk-open {
   color: #666;
   outline: none;
   text-decoration: none;
 }
 /*
  * Icon
  * Adopts `uk-icon`
  */
 /* Hover + Focus */
 /* Subtitle
  ========================================================================== */
 .uk-navbar-subtitle {
   font-size: 0.875rem;
 }
 /* Style modifiers
  ========================================================================== */
 /* Dropdown
  ========================================================================== */
 /*
  * Adopts `uk-dropdown`
  * 1. Hide by default
  * 2. Set position
  * 3. Set a default width
  * 4. Style
  */
 .uk-navbar-dropdown {
   /* 1 */
   display: none;
   /* 2 */
   position: absolute;
   z-index: 1020;
   /* 3 */
   box-sizing: border-box;
   width: 200px;
   /* 4 */
   padding: 25px;
   background: #fff;
   color: #666;
   box-shadow: 0 5px 12px rgba(0, 0, 0, 0.15);
 }
 /* Show */
 .uk-navbar-dropdown.uk-open {
   display: block;
 }
 /*
  * Direction / Alignment modifiers
  */
 /* Direction */
 [class*='uk-navbar-dropdown-top'] {
   margin-top: -15px;
 }
 [class*='uk-navbar-dropdown-bottom'] {
   margin-top: 15px;
 }
 [class*='uk-navbar-dropdown-left'] {
   margin-left: -15px;
 }
 [class*='uk-navbar-dropdown-right'] {
   margin-left: 15px;
 }
 /*
  * Grid
  * Adopts `uk-grid`
  */
 /* Gutter Horizontal */
 .uk-navbar-dropdown-grid {
   margin-left: -50px;
 }
 .uk-navbar-dropdown-grid > * {
   padding-left: 50px;
 }
 /* Gutter Vertical */
 .uk-navbar-dropdown-grid > .uk-grid-margin {
   margin-top: 50px;
 }
 /* Stack */
 
 /*
  * Dropbar modifier
  */
 
 /* Dropdown Nav
  * Adopts `uk-nav`
  ========================================================================== */

 /*
  * Header
  */

 /* Dropbar
  ========================================================================== */
 
 /* Items
  ========================================================================== */
 /*
  * Items must target `a` elements to exclude other elements (e.g. dropdowns)
  * Using `:first-child` instead of `a` to support `span` elements for text
  * 1. Prevent gap if child element is `inline-block`, e.g. an icon
  * 2. Style
  */
 .uk-subnav > * > :first-child {
   /* 1 */
   display: block;
   /* 2 */
   color: #999;
   font-size: 0.875rem;
   text-transform: uppercase;
   transition: 0.1s ease-in-out;
   transition-property: color, background-color;
 }
 /* Hover + Focus */
 .uk-subnav > * > a:hover,
 .uk-subnav > * > a:focus {
   color: #666;
   text-decoration: none;
   outline: none;
 }
 /* Active */
 .uk-subnav > .uk-active > a {
   color: #333;
 }
 /* Divider modifier
  ========================================================================== */
 /*
  * Set gutter 
  */
 .uk-subnav-divider {
   margin-left: -41px;
 }
 /*
  * Align items and divider vertically
  */
 .uk-subnav-divider > * {
   display: flex;
   align-items: center;
 }
 /*
  * Divider
  * 1. `nth-child` makes it also work without JS if it's only one row
  */
 .uk-subnav-divider > ::before {
   content: "";
   height: 1.5em;
   margin-left: 0px;
   margin-right: 20px;
   border-left: 1px solid transparent;
 }
 /* 1 */
 .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before {
   border-left-color: #e5e5e5;
 }
 /* Pill modifier
  ========================================================================== */
 .uk-subnav-pill > * > :first-child {
   padding: 5px 10px;
   background: transparent;
   color: #999;
 }
 /* Hover + Focus */
 .uk-subnav-pill > * > a:hover,
 .uk-subnav-pill > * > a:focus {
   background-color: #f8f8f8;
   color: #666;
 }
 /* OnClick */
 .uk-subnav-pill > * > a:active {
   background-color: #f8f8f8;
   color: #666;
 }
 /* Active */
 .uk-subnav-pill > .uk-active > a {
   background-color: #1e87f0;
   color: #fff;
 }
 /* Disabled
  * The same for all style modifiers
  ========================================================================== */
 .uk-subnav > .uk-disabled > a {
   color: #999;
 }
 /* ========================================================================
    Component: Breadcrumb
  ========================================================================== */
 /*
  * Reset list
  */
 .uk-breadcrumb {
   padding: 0;
   list-style: none;
 }
 /*
  * 1. Doesn't generate any box and replaced by child boxes
  */
 .uk-breadcrumb > * {
   display: contents;
 }
 /* Items
  ========================================================================== */
 .uk-breadcrumb > * > * {
   font-size: 0.875rem;
   color: #999;
 }
 /* Hover + Focus */
 .uk-breadcrumb > * > :hover,
 .uk-breadcrumb > * > :focus {
   color: #666;
   text-decoration: none;
 }
 /* Disabled */
 /* Active */
 .uk-breadcrumb > :last-child > span,
 .uk-breadcrumb > :last-child > a:not([href]) {
   color: #666;
 }
 /*
  * Divider
  * `nth-child` makes it also work without JS if it's only one row
  * 1. Remove space between inline block elements.
  * 2. Style
  */
 .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before {
   content: "/";
   display: inline-block;
   /* 1 */
   margin: 0 20px 0 calc(20px - 4px);
   /* 2 */
   font-size: 0.875rem;
   color: #999;
 }
 /* ========================================================================
    Component: Pagination
  ========================================================================== */
 /*
  * 1. Allow items to wrap into the next line
  * 2. Gutter
  * 3. Reset list
  */
 .uk-pagination {
   display: flex;
   /* 1 */
   flex-wrap: wrap;
   /* 2 */
   margin-left: 0;
   /* 3 */
   padding: 0;
   list-style: none;
 }
 /*
  * 1. Space is allocated solely based on content dimensions: 0 0 auto
  * 2. Gutter
  * 3. Create position context for dropdowns
  */
 .uk-pagination > * {
   /* 1 */
   flex: none;
   /* 2 */
   padding-left: 0;
   /* 3 */
   position: relative;
 }
 /* Items
  ========================================================================== */
 /*
  * 1. Prevent gap if child element is `inline-block`, e.g. an icon
  * 2. Style
  */
 .uk-pagination > * > * {
   /* 1 */
   display: block;
   /* 2 */
   padding: 5px 10px;
   color: #999;
   transition: color 0.1s ease-in-out;
 }
 /* Hover + Focus */
 .uk-pagination > * > :hover,
 .uk-pagination > * > :focus {
   color: #666;
   text-decoration: none;
 }
 /* Active */
 .uk-pagination > .uk-active > * {
   color: #666;
 }
 /* Disabled */
 .uk-pagination > .uk-disabled > * {
   color: #999;
 }
 /* ========================================================================
    Component: Tab
  ========================================================================== */
 /*
  * 1. Allow items to wrap into the next line
  * 2. Gutter
  * 3. Reset list
  */
 .uk-tab {
   display: flex;
   /* 1 */
   flex-wrap: wrap;
   /* 2 */
   margin-left: -20px;
   /* 3 */
   padding: 0;
   list-style: none;
   position: relative;
 }
 .uk-tab::before {
   content: "";
   position: absolute;
   bottom: 0;
   left: 20px;
   right: 0;
   border-bottom: 1px solid #e5e5e5;
 }
 /*
  * 1. Space is allocated solely based on content dimensions: 0 0 auto
  * 2. Gutter
  * 3. Create position context for dropdowns
  */
 .uk-tab > * {
   /* 1 */
   flex: none;
   /* 2 */
   padding-left: 20px;
   /* 3 */
   position: relative;
 }
 /* Items
  ========================================================================== */
 /*
  * Items must target `a` elements to exclude other elements (e.g. dropdowns)
  * 1. Center text if a width is set
  * 2. Style
  */
 .uk-tab > * > a {
   /* 1 */
   display: block;
   text-align: center;
   /* 2 */
   padding: 5px 10px;
   color: #999;
   border-bottom: 1px solid transparent;
   font-size: 0.875rem;
   text-transform: uppercase;
   transition: color 0.1s ease-in-out;
 }
 /* Hover + Focus */
 .uk-tab > * > a:hover,
 .uk-tab > * > a:focus {
   color: #666;
   text-decoration: none;
 }
 /* Active */
 .uk-tab > .uk-active > a {
   color: #333;
   border-color: #1e87f0;
 }
 /* Disabled */
 .uk-tab > .uk-disabled > a {
   color: #999;
 }
 /* Position modifier
  ========================================================================== */
 /*
  * Bottom
  */
 .uk-tab-bottom::before {
   top: 0;
   bottom: auto;
 }
 .uk-tab-bottom > * > a {
   border-top: 1px solid transparent;
   border-bottom: none;
 }
 /*
  * Left + Right
  * 1. Reset Gutter
  */
 .uk-tab-left,
 .uk-tab-right {
   flex-direction: column;
   /* 1 */
   margin-left: 0;
 }
 /* 1 */
 .uk-tab-left > *,
 .uk-tab-right > * {
   padding-left: 0;
 }
 .uk-tab-left::before {
   top: 0;
   bottom: 0;
   left: auto;
   right: 0;
   border-left: 1px solid #e5e5e5;
   border-bottom: none;
 }
 .uk-tab-right::before {
   top: 0;
   bottom: 0;
   left: 0;
   right: auto;
   border-left: 1px solid #e5e5e5;
   border-bottom: none;
 }
 .uk-tab-left > * > a {
   text-align: left;
   border-right: 1px solid transparent;
   border-bottom: none;
 }
 .uk-tab-right > * > a {
   text-align: left;
   border-left: 1px solid transparent;
   border-bottom: none;
 }
 .uk-tab .uk-dropdown {
   margin-left: 30px;
 }
 /* ========================================================================
    Component: Slidenav
  ========================================================================== */
 /*
  * Adopts `uk-icon`
  */
 .uk-slidenav {
   padding: 5px 10px;
   color: rgba(102, 102, 102, 0.5);
   transition: color 0.1s ease-in-out;
 }
 /* Hover + Focus */
 .uk-slidenav:hover,
 .uk-slidenav:focus {
   color: rgba(102, 102, 102, 0.9);
   outline: none;
 }
 /* OnClick */
 .uk-slidenav:active {
   color: rgba(102, 102, 102, 0.5);
 }
 /* Icon modifier
  ========================================================================== */
 /*
  * Previous
  */
 /*
  * Next
  */
 /* Size modifier
  ========================================================================== */
 .uk-slidenav-large {
   padding: 10px 10px;
 }
 /* Container
  ========================================================================== */
 .uk-slidenav-container {
   display: flex;
 }
 /* ========================================================================
    Component: Dotnav
  ========================================================================== */
 /*
  * 1. Allow items to wrap into the next line
  * 2. Reset list
  * 3. Gutter
  */
 .uk-dotnav {
   display: flex;
   /* 1 */
   flex-wrap: wrap;
   /* 2 */
   margin: 0;
   padding: 0;
   list-style: none;
   /* 3 */
   margin-left: -12px;
 }
 /*
  * 1. Space is allocated solely based on content dimensions: 0 0 auto
  * 2. Gutter
  */
 .uk-dotnav > * {
   /* 1 */
   flex: none;
   /* 2 */
   padding-left: 12px;
 }
 /* Items
  ========================================================================== */
 /*
  * Items
  * 1. Hide text if present
  */
 .uk-dotnav > * > * {
   display: block;
   box-sizing: border-box;
   width: 10px;
   height: 10px;
   border-radius: 50%;
   background: transparent;
   /* 1 */
   text-indent: 100%;
   overflow: hidden;
   white-space: nowrap;
   border: 1px solid rgba(102, 102, 102, 0.4);
   transition: 0.2s ease-in-out;
   transition-property: background-color, border-color;
 }
 /* Hover + Focus */
 .uk-dotnav > * > :hover,
 .uk-dotnav > * > :focus {
   background-color: rgba(102, 102, 102, 0.6);
   outline: none;
   border-color: transparent;
 }
 /* OnClick */
 .uk-dotnav > * > :active {
   background-color: rgba(102, 102, 102, 0.2);
   border-color: transparent;
 }
 /* Active */
 .uk-dotnav > .uk-active > * {
   background-color: rgba(102, 102, 102, 0.6);
   border-color: transparent;
 }
 /* Modifier: 'uk-dotnav-vertical'
  ========================================================================== */
 /*
  * 1. Change direction
  * 2. Gutter
  */
 .uk-dotnav-vertical {
   /* 1 */
   flex-direction: column;
   /* 2 */
   margin-left: 0;
   margin-top: -12px;
 }
 /* 2 */
 .uk-dotnav-vertical > * {
   padding-left: 0;
   padding-top: 12px;
 }
 /* ========================================================================
    Component: Thumbnav
  ========================================================================== */
 /*
  * 1. Allow items to wrap into the next line
  * 2. Reset list
  * 3. Gutter
  */
 .uk-thumbnav {
   display: flex;
   /* 1 */
   flex-wrap: wrap;
   /* 2 */
   margin: 0;
   padding: 0;
   list-style: none;
   /* 3 */
   margin-left: -15px;
 }
 /*
  * Space is allocated based on content dimensions, but shrinks: 0 1 auto
  * 1. Gutter
  */
 .uk-thumbnav > * {
   /* 1 */
   padding-left: 15px;
 }
 /* Items
  ========================================================================== */
 /*
  * Items
  */
 .uk-thumbnav > * > * {
   display: inline-block;
   position: relative;
 }
 .uk-thumbnav > * > *::after {
   content: "";
   position: absolute;
   top: 0;
   bottom: 0;
   left: 0;
   right: 0;
   background: rgba(255, 255, 255, 0.4);
   transition: background-color 0.1s ease-in-out;
 }
 /* Hover + Focus */
 .uk-thumbnav > * > :hover,
 .uk-thumbnav > * > :focus {
   outline: none;
 }
 .uk-thumbnav > * > :hover::after,
 .uk-thumbnav > * > :focus::after {
   background-color: transparent;
 }
 /* Active */
 .uk-thumbnav > .uk-active > *::after {
   background-color: transparent;
 }
 /* Modifier: 'uk-thumbnav-vertical'
  ========================================================================== */
 /*
  * 1. Change direction
  * 2. Gutter
  */
 .uk-thumbnav-vertical {
   /* 1 */
   flex-direction: column;
   /* 2 */
   margin-left: 0;
   margin-top: -15px;
 }
 /* 2 */
 .uk-thumbnav-vertical > * {
   padding-left: 0;
   padding-top: 15px;
 }
 /* ========================================================================
    Component: Iconnav
  ========================================================================== */
 /*
  * 1. Allow items to wrap into the next line
  * 2. Reset list
  * 3. Gutter
  */
 .uk-iconnav {
   display: flex;
   /* 1 */
   flex-wrap: wrap;
   /* 2 */
   margin: 0;
   padding: 0;
   list-style: none;
   /* 3 */
   margin-left: -10px;
 }
 /*
  * Space is allocated based on content dimensions, but shrinks: 0 1 auto
  * 1. Gutter
  */
 .uk-iconnav > * {
   /* 1 */
   padding-left: 10px;
 }
 /* Items
  ========================================================================== */
 /*
  * Items must target `a` elements to exclude other elements (e.g. dropdowns)
  * 1. Prevent gap if child element is `inline-block`, e.g. an icon
  * 2. Style
  */
 .uk-iconnav > * > a {
   /* 1 */
   display: block;
   /* 2 */
   color: #999;
 }
 /* Hover + Focus */
 .uk-iconnav > * > a:hover,
 .uk-iconnav > * > a:focus {
   color: #666;
   outline: none;
 }
 /* Active */
 .uk-iconnav > .uk-active > a {
   color: #666;
 }
 /* Modifier: 'uk-iconnav-vertical'
  ========================================================================== */
 /*
  * 1. Change direction
  * 2. Gutter
  */
 .uk-iconnav-vertical {
   /* 1 */
   flex-direction: column;
   /* 2 */
   margin-left: 0;
   margin-top: -10px;
 }
 /* 2 */
 .uk-iconnav-vertical > * {
   padding-left: 0;
   padding-top: 10px;
 }
 /* ========================================================================
    Component: Lightbox
  ========================================================================== */
 /*
  * 1. Hide by default
  * 2. Set position
  * 3. Allow scrolling for the modal dialog
  * 4. Horizontal padding
  * 5. Mask the background page
  * 6. Fade-in transition
  * 7. Prevent cancellation of pointer events while dragging
  */
 .uk-lightbox {
   /* 1 */
   display: none;
   /* 2 */
   position: fixed;
   top: 0;
   right: 0;
   bottom: 0;
   left: 0;
   z-index: 1010;
   /* 5 */
   background: #000;
   /* 6 */
   opacity: 0;
   transition: opacity 0.15s linear;
   /* 7 */
   touch-action: pinch-zoom;
 }
 /*
  * Open
  * 1. Center child
  * 2. Fade-in
  */
 .uk-lightbox.uk-open {
   display: block;
   /* 2 */
   opacity: 1;
 }
 /* Page
  ========================================================================== */
 /*
  * Prevent scrollbars
  */
 .uk-lightbox-page {
   overflow: hidden;
 }
 /* Item
  ========================================================================== */
 /*
  * 1. Center child within the viewport
  * 2. Not visible by default
  * 3. Color needed for spinner icon
  * 4. Optimize animation
  * 5. Responsiveness
  *    Using `vh` for `max-height` to fix image proportions after resize in Safari and Opera
  *    Using `vh` and `vw` to make responsive image work in IE11
  * 6. Suppress outline on focus
  */
 .uk-lightbox-items > * {
   /* 1 */
   position: absolute;
   top: 0;
   right: 0;
   bottom: 0;
   left: 0;
   /* 2 */
   display: none;
   justify-content: center;
   align-items: center;
   /* 3 */
   color: rgba(255, 255, 255, 0.7);
   /* 4 */
   will-change: transform, opacity;
 }
 /* 5 */
 .uk-lightbox-items > * > * {
   max-width: 100vw;
   max-height: 100vh;
 }
 /* 6 */
 .uk-lightbox-items > :focus {
   outline: none;
 }
 .uk-lightbox-items > * > :not(iframe) {
   width: auto;
   height: auto;
 }
 .uk-lightbox-items > .uk-active {
   display: flex;
 }
 /* Toolbar
  ========================================================================== */
 .uk-lightbox-toolbar {
   padding: 10px 10px;
   background: rgba(0, 0, 0, 0.3);
   color: rgba(255, 255, 255, 0.7);
 }
 .uk-lightbox-toolbar > * {
   color: rgba(255, 255, 255, 0.7);
 }
 /* Toolbar Icon (Close)
  ========================================================================== */
 .uk-lightbox-toolbar-icon {
   padding: 5px;
   color: rgba(255, 255, 255, 0.7);
 }
 /*
  * Hover
  */
 .uk-lightbox-toolbar-icon:hover {
   color: #fff;
 }
 /* Button (Slidenav)
  ========================================================================== */
 /*
  * 1. Center icon vertically and horizontally
  */
 .uk-lightbox-button {
   box-sizing: border-box;
   width: 50px;
   height: 50px;
   background: rgba(0, 0, 0, 0.3);
   color: rgba(255, 255, 255, 0.7);
   /* 1 */
   display: inline-flex;
   justify-content: center;
   align-items: center;
 }
 /* Hover + Focus */
 .uk-lightbox-button:hover,
 .uk-lightbox-button:focus {
   color: #fff;
 }
 /* OnClick */
 /* Caption
  ========================================================================== */
 .uk-lightbox-caption:empty {
   display: none;
 }
 /* Iframe
  ========================================================================== */
 .uk-lightbox-iframe {
   width: 80%;
   height: 80%;
 }
 /* ========================================================================
    Component: Animation
  ========================================================================== */
 [class*='uk-animation-'] {
   animation-duration: 0.5s;
   animation-timing-function: ease-out;
   animation-fill-mode: both;
 }
 /* Animations
  ========================================================================== */
 /*
  * Fade
  */
 .uk-animation-fade {
   animation-name: uk-fade;
   animation-duration: 0.8s;
   animation-timing-function: linear;
 }
 /*
  * Scale
  */
 .uk-animation-scale-up {
   animation-name: uk-fade-scale-02;
 }
 .uk-animation-scale-down {
   animation-name: uk-fade-scale-18;
 }
 /*
  * Slide
  */
 .uk-animation-slide-top {
   animation-name: uk-fade-top;
 }
 .uk-animation-slide-bottom {
   animation-name: uk-fade-bottom;
 }
 .uk-animation-slide-left {
   animation-name: uk-fade-left;
 }
 .uk-animation-slide-right {
   animation-name: uk-fade-right;
 }
 /*
  * Slide Small
  */
 .uk-animation-slide-top-small {
   animation-name: uk-fade-top-small;
 }
 .uk-animation-slide-bottom-small {
   animation-name: uk-fade-bottom-small;
 }
 .uk-animation-slide-left-small {
   animation-name: uk-fade-left-small;
 }
 .uk-animation-slide-right-small {
   animation-name: uk-fade-right-small;
 }
 /*
  * Slide Medium
  */
 .uk-animation-slide-top-medium {
   animation-name: uk-fade-top-medium;
 }
 .uk-animation-slide-bottom-medium {
   animation-name: uk-fade-bottom-medium;
 }
 .uk-animation-slide-left-medium {
   animation-name: uk-fade-left-medium;
 }
 .uk-animation-slide-right-medium {
   animation-name: uk-fade-right-medium;
 }
 /*
  * Kenburns
  */
 .uk-animation-kenburns {
   animation-name: uk-scale-kenburns;
   animation-duration: 15s;
 }
 /*
  * Shake
  */
 .uk-animation-shake {
   animation-name: uk-shake;
 }
 /*
  * SVG Stroke
  * The `--uk-animation-stroke` custom property contains the longest path length.
  * Set it manually or use `uk-svg="stroke-animation: true"` to set it automatically.
  * All strokes are animated by the same pace and doesn't end simultaneously.
  * To end simultaneously, `pathLength="1"` could be used, but it's not working in Safari yet.
  */
 .uk-animation-stroke {
   animation-name: uk-stroke;
   stroke-dasharray: var(--uk-animation-stroke);
   animation-duration: 2s;
 }
 /* Direction modifier
  ========================================================================== */
 .uk-animation-reverse {
   animation-direction: reverse;
   animation-timing-function: ease-in;
 }
 /* Duration modifier
  ========================================================================== */
 .uk-animation-fast {
   animation-duration: 0.1s;
 }
 /* Toggle (Hover + Focus)
 ========================================================================== */
 /*
  * The toggle is triggered on touch devices using `:focus` and tabindex
  */
 .uk-animation-toggle:not(:hover):not(:focus) [class*='uk-animation-'] {
   animation-name: none;
 }
 /*
  * 1. Prevent tab highlighting on iOS.
  */
 .uk-animation-toggle {
   /* 1 */
   -webkit-tap-highlight-color: transparent;
 }
 /*
  * Remove outline for `tabindex`
  */
 .uk-animation-toggle:focus {
   outline: none;
 }
 /* Keyframes used by animation classes
  ========================================================================== */
 /*
  * Fade
  */
 @keyframes uk-fade {
   0% {
     opacity: 0;
   }
   100% {
     opacity: 1;
   }
 }
 /*
  * Slide Top
  */
 @keyframes uk-fade-top {
   0% {
     opacity: 0;
     transform: translateY(-100%);
   }
   100% {
     opacity: 1;
     transform: translateY(0);
   }
 }
 /*
  * Slide Bottom
  */
 @keyframes uk-fade-bottom {
   0% {
     opacity: 0;
     transform: translateY(100%);
   }
   100% {
     opacity: 1;
     transform: translateY(0);
   }
 }
 /*
  * Slide Left
  */
 @keyframes uk-fade-left {
   0% {
     opacity: 0;
     transform: translateX(-100%);
   }
   100% {
     opacity: 1;
     transform: translateX(0);
   }
 }
 /*
  * Slide Right
  */
 @keyframes uk-fade-right {
   0% {
     opacity: 0;
     transform: translateX(100%);
   }
   100% {
     opacity: 1;
     transform: translateX(0);
   }
 }
 /*
  * Slide Top Small
  */
 @keyframes uk-fade-top-small {
   0% {
     opacity: 0;
     transform: translateY(-10px);
   }
   100% {
     opacity: 1;
     transform: translateY(0);
   }
 }
 /*
  * Slide Bottom Small
  */
 @keyframes uk-fade-bottom-small {
   0% {
     opacity: 0;
     transform: translateY(10px);
   }
   100% {
     opacity: 1;
     transform: translateY(0);
   }
 }
 /*
  * Slide Left Small
  */
 @keyframes uk-fade-left-small {
   0% {
     opacity: 0;
     transform: translateX(-10px);
   }
   100% {
     opacity: 1;
     transform: translateX(0);
   }
 }
 /*
  * Slide Right Small
  */
 @keyframes uk-fade-right-small {
   0% {
     opacity: 0;
     transform: translateX(10px);
   }
   100% {
     opacity: 1;
     transform: translateX(0);
   }
 }
 /*
  * Slide Top Medium
  */
 @keyframes uk-fade-top-medium {
   0% {
     opacity: 0;
     transform: translateY(-50px);
   }
   100% {
     opacity: 1;
     transform: translateY(0);
   }
 }
 /*
  * Slide Bottom Medium
  */
 @keyframes uk-fade-bottom-medium {
   0% {
     opacity: 0;
     transform: translateY(50px);
   }
   100% {
     opacity: 1;
     transform: translateY(0);
   }
 }
 /*
  * Slide Left Medium
  */
 @keyframes uk-fade-left-medium {
   0% {
     opacity: 0;
     transform: translateX(-50px);
   }
   100% {
     opacity: 1;
     transform: translateX(0);
   }
 }
 /*
  * Slide Right Medium
  */
 @keyframes uk-fade-right-medium {
   0% {
     opacity: 0;
     transform: translateX(50px);
   }
   100% {
     opacity: 1;
     transform: translateX(0);
   }
 }
 /*
  * Scale Up
  */
 @keyframes uk-fade-scale-02 {
   0% {
     opacity: 0;
     transform: scale(0.2);
   }
   100% {
     opacity: 1;
     transform: scale(1);
   }
 }
 /*
  * Scale Down
  */
 @keyframes uk-fade-scale-18 {
   0% {
     opacity: 0;
     transform: scale(1.8);
   }
   100% {
     opacity: 1;
     transform: scale(1);
   }
 }
 /*
  * Kenburns
  */
 @keyframes uk-scale-kenburns {
   0% {
     transform: scale(1);
   }
   100% {
     transform: scale(1.2);
   }
 }
 /*
  * Shake
  */
 @keyframes uk-shake {
   0%,
   100% {
     transform: translateX(0);
   }
   10% {
     transform: translateX(-9px);
   }
   20% {
     transform: translateX(8px);
   }
   30% {
     transform: translateX(-7px);
   }
   40% {
     transform: translateX(6px);
   }
   50% {
     transform: translateX(-5px);
   }
   60% {
     transform: translateX(4px);
   }
   70% {
     transform: translateX(-3px);
   }
   80% {
     transform: translateX(2px);
   }
   90% {
     transform: translateX(-1px);
   }
 }
 /*
  * Stroke
  */
 @keyframes uk-stroke {
   0% {
     stroke-dashoffset: var(--uk-animation-stroke);
   }
   100% {
     stroke-dashoffset: 0;
   }
 }
 /* ========================================================================
    Component: Width
  ========================================================================== */
 /* Equal child widths
  ========================================================================== */
 [class*='uk-child-width'] > * {
   box-sizing: border-box;
   width: 100%;
 }
 .uk-child-width-1-2 > * {
   width: 50%;
 }
 .uk-child-width-1-3 > * {
   width: calc(100% * 1 / 3.001);
 }
 .uk-child-width-1-4 > * {
   width: 25%;
 }
 .uk-child-width-1-5 > * {
   width: 20%;
 }
 .uk-child-width-1-6 > * {
   width: calc(100% * 1 / 6.001);
 }
 .uk-child-width-auto > * {
   width: auto;
 }
 /*
  * 1. Reset the `min-width`, which is set to auto by default, because
  *    flex items won't shrink below their minimum intrinsic content size.
  *    Using `1px` instead of `0`, so items still wrap into the next line,
  *    if they have zero width and padding and the predecessor is 100% wide.
  */
 .uk-child-width-expand > :not([class*='uk-width']) {
   flex: 1;
   /* 1 */
   min-width: 1px;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   .uk-child-width-1-1\@s > * {
     width: 100%;
   }
   .uk-child-width-1-2\@s > * {
     width: 25%;
   }
   .uk-child-width-1-3\@s > * {
     width: calc(100% * 1 / 3.001);
   }
   .uk-child-width-1-4\@s > * {
     width: 25%;
   }
   .uk-child-width-1-5\@s > * {
     width: 20%;
   }
   .uk-child-width-1-6\@s > * {
     width: calc(100% * 1 / 6.001);
   }
   .uk-child-width-auto\@s > * {
     width: auto;
   }
   .uk-child-width-expand\@s > :not([class*='uk-width']) {
     flex: 1;
     min-width: 1px;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-child-width-1-1\@m > * {
     width: 100%;
   }
   .uk-child-width-1-2\@m > * {
     width: 50%;
   }
   .uk-child-width-1-3\@m > * {
     width: calc(100% * 1 / 3.001);
   }
   .uk-child-width-1-4\@m > * {
     width: 25%;
   }
   .uk-child-width-1-5\@m > * {
     width: 20%;
   }
   .uk-child-width-1-6\@m > * {
     width: calc(100% * 1 / 6.001);
   }
   .uk-child-width-auto\@m > * {
     width: auto;
   }
   .uk-child-width-expand\@m > :not([class*='uk-width']) {
     flex: 1;
     min-width: 1px;
   }
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-child-width-1-1\@l > * {
     width: 100%;
   }
   .uk-child-width-1-2\@l > * {
     width: 50%;
   }
   .uk-child-width-1-3\@l > * {
     width: calc(100% * 1 / 3.001);
   }
   .uk-child-width-1-4\@l > * {
     width: 25%;
   }
   .uk-child-width-1-5\@l > * {
     width: 20%;
   }
   .uk-child-width-1-6\@l > * {
     width: calc(100% * 1 / 6.001);
   }
   .uk-child-width-auto\@l > * {
     width: auto;
   }
   .uk-child-width-expand\@l > :not([class*='uk-width']) {
     flex: 1;
     min-width: 1px;
   }
 }
 /* Large screen and bigger */
 @media (min-width: 1600px) {
   .uk-child-width-1-1\@xl > * {
     width: 100%;
   }
   .uk-child-width-1-2\@xl > * {
     width: 50%;
   }
   .uk-child-width-1-3\@xl > * {
     width: calc(100% * 1 / 3.001);
   }
   .uk-child-width-1-4\@xl > * {
     width: 25%;
   }
   .uk-child-width-1-5\@xl > * {
     width: 20%;
   }
   .uk-child-width-1-6\@xl > * {
     width: calc(100% * 1 / 6.001);
   }
   .uk-child-width-auto\@xl > * {
     width: auto;
   }
   .uk-child-width-expand\@xl > :not([class*='uk-width']) {
     flex: 1;
     min-width: 1px;
   }
 }
 /* Single Widths
  ========================================================================== */
 /*
  * 1. `max-width` is needed for the pixel-based classes
  */
 [class*='uk-width'] {
   box-sizing: border-box;
   width: 100%;
   /* 1 */
   max-width: 100%;
 }
 /* Halves */
 .uk-width-1-2 {
   width: 50%;
 }
 /* Thirds */
 .uk-width-1-3 {
   width: calc(100% * 1 / 3.001);
 }
 .uk-width-2-3 {
   width: calc(100% * 2 / 3.001);
 }
 /* Quarters */
 .uk-width-1-4 {
   width: 25%;
 }
 .uk-width-3-4 {
   width: 75%;
 }
 /* Fifths */
 .uk-width-1-5 {
   width: 20%;
 }
 .uk-width-2-5 {
   width: 40%;
 }
 .uk-width-3-5 {
   width: 60%;
 }
 .uk-width-4-5 {
   width: 80%;
 }
 /* Sixths */
 .uk-width-1-6 {
   width: calc(100% * 1 / 6.001);
 }
 .uk-width-5-6 {
   width: calc(100% * 5 / 6.001);
 }
 /* Pixel */
 .uk-width-small {
   width: 150px;
 }
 .uk-width-medium {
   width: 300px;
 }
 .uk-width-large {
   width: 450px;
 }
 .uk-width-xlarge {
   width: 600px;
 }
 .uk-width-2xlarge {
   width: 750px;
 }
 /* Auto */
 .uk-width-auto {
   width: auto;
 }
 /* Expand */
 .uk-width-expand {
   flex: 1;
   min-width: 1px;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   /* Whole */
   .uk-width-1-1\@s {
     width: 100%;
   }
   /* Halves */
   .uk-width-1-2\@s {
     width: 50%;
   }
   /* Thirds */
   .uk-width-1-3\@s {
     width: calc(100% * 1 / 3.001);
   }
   .uk-width-2-3\@s {
     width: calc(100% * 2 / 3.001);
   }
   /* Quarters */
   .uk-width-1-4\@s {
     width: 25%;
   }
   .uk-width-3-4\@s {
     width: 75%;
   }
   /* Fifths */
   .uk-width-1-5\@s {
     width: 20%;
   }
   .uk-width-2-5\@s {
     width: 40%;
   }
   .uk-width-3-5\@s {
     width: 60%;
   }
   .uk-width-4-5\@s {
     width: 80%;
   }
   /* Sixths */
   .uk-width-1-6\@s {
     width: calc(100% * 1 / 6.001);
   }
   .uk-width-5-6\@s {
     width: calc(100% * 5 / 6.001);
   }
   /* Pixel */
   .uk-width-small\@s {
     width: 150px;
   }
   .uk-width-medium\@s {
     width: 300px;
   }
   .uk-width-large\@s {
     width: 450px;
   }
   .uk-width-xlarge\@s {
     width: 600px;
   }
   .uk-width-2xlarge\@s {
     width: 750px;
   }
   /* Auto */
   .uk-width-auto\@s {
     width: auto;
   }
   /* Expand */
   .uk-width-expand\@s {
     flex: 1;
     min-width: 1px;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   /* Whole */
   .uk-width-1-1\@m {
     width: 100%;
   }
   /* Halves */
   .uk-width-1-2\@m {
     width: 50%;
   }
   /* Thirds */
   .uk-width-1-3\@m {
     width: calc(100% * 1 / 3.001);
   }
   .uk-width-2-3\@m {
     width: calc(100% * 2 / 3.001);
   }
   /* Quarters */
   .uk-width-1-4\@m {
     width: 25%;
   }
   .uk-width-3-4\@m {
     width: 75%;
   }
   /* Fifths */
   .uk-width-1-5\@m {
     width: 20%;
   }
   .uk-width-2-5\@m {
     width: 40%;
   }
   .uk-width-3-5\@m {
     width: 60%;
   }
   .uk-width-4-5\@m {
     width: 80%;
   }
   /* Sixths */
   .uk-width-1-6\@m {
     width: calc(100% * 1 / 6.001);
   }
   .uk-width-5-6\@m {
     width: calc(100% * 5 / 6.001);
   }
   /* Pixel */
   .uk-width-small\@m {
     width: 150px;
   }
   .uk-width-medium\@m {
     width: 300px;
   }
   .uk-width-large\@m {
     width: 450px;
   }
   .uk-width-xlarge\@m {
     width: 600px;
   }
   .uk-width-2xlarge\@m {
     width: 750px;
   }
   /* Auto */
   .uk-width-auto\@m {
     width: auto;
   }
   /* Expand */
   .uk-width-expand\@m {
     flex: 1;
     min-width: 1px;
   }
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   /* Whole */
   .uk-width-1-1\@l {
     width: 100%;
   }
   /* Halves */
   .uk-width-1-2\@l {
     width: 50%;
   }
   /* Thirds */
   .uk-width-1-3\@l {
     width: calc(100% * 1 / 3.001);
   }
   .uk-width-2-3\@l {
     width: calc(100% * 2 / 3.001);
   }
   /* Quarters */
   .uk-width-1-4\@l {
     width: 25%;
   }
   .uk-width-3-4\@l {
     width: 75%;
   }
   /* Fifths */
   .uk-width-1-5\@l {
     width: 20%;
   }
   .uk-width-2-5\@l {
     width: 40%;
   }
   .uk-width-3-5\@l {
     width: 60%;
   }
   .uk-width-4-5\@l {
     width: 80%;
   }
   /* Sixths */
   .uk-width-1-6\@l {
     width: calc(100% * 1 / 6.001);
   }
   .uk-width-5-6\@l {
     width: calc(100% * 5 / 6.001);
   }
   /* Pixel */
   .uk-width-small\@l {
     width: 150px;
   }
   .uk-width-medium\@l {
     width: 300px;
   }
   .uk-width-large\@l {
     width: 450px;
   }
   .uk-width-xlarge\@l {
     width: 600px;
   }
   .uk-width-2xlarge\@l {
     width: 750px;
   }
   /* Auto */
   .uk-width-auto\@l {
     width: auto;
   }
   /* Expand */
   .uk-width-expand\@l {
     flex: 1;
     min-width: 1px;
   }
 }
 /* Large screen and bigger */
 @media (min-width: 1600px) {
   /* Whole */
   .uk-width-1-1\@xl {
     width: 100%;
   }
   /* Halves */
   .uk-width-1-2\@xl {
     width: 50%;
   }
   /* Thirds */
   .uk-width-1-3\@xl {
     width: calc(100% * 1 / 3.001);
   }
   .uk-width-2-3\@xl {
     width: calc(100% * 2 / 3.001);
   }
   /* Quarters */
   .uk-width-1-4\@xl {
     width: 25%;
   }
   .uk-width-3-4\@xl {
     width: 75%;
   }
   /* Fifths */
   .uk-width-1-5\@xl {
     width: 20%;
   }
   .uk-width-2-5\@xl {
     width: 40%;
   }
   .uk-width-3-5\@xl {
     width: 60%;
   }
   .uk-width-4-5\@xl {
     width: 80%;
   }
   /* Sixths */
   .uk-width-1-6\@xl {
     width: calc(100% * 1 / 6.001);
   }
   .uk-width-5-6\@xl {
     width: calc(100% * 5 / 6.001);
   }
   /* Pixel */
   .uk-width-small\@xl {
     width: 150px;
   }
   .uk-width-medium\@xl {
     width: 300px;
   }
   .uk-width-large\@xl {
     width: 450px;
   }
   .uk-width-xlarge\@xl {
     width: 600px;
   }
   .uk-width-2xlarge\@xl {
     width: 750px;
   }
   /* Auto */
   .uk-width-auto\@xl {
     width: auto;
   }
   /* Expand */
   .uk-width-expand\@xl {
     flex: 1;
     min-width: 1px;
   }
 }
 /* ========================================================================
    Component: Height
  ========================================================================== */
 [class*='uk-height'] {
   box-sizing: border-box;
 }
 /*
  * Only works if parent element has a height set
  */
 .uk-height-1-1 {
   height: 100%;
 }
 /*
  * Useful to create image teasers
  */
 .uk-height-viewport {
   min-height: 100vh;
 }
 /*
  * Pixel
  * Useful for `overflow: auto`
  */
 .uk-height-small {
   height: 150px;
 }
 .uk-height-medium {
   height: 300px;
 }
 .uk-height-large {
   height: 450px;
 }
 .uk-height-max-small {
   max-height: 150px;
 }
 .uk-height-max-medium {
   max-height: 300px;
 }
 .uk-height-max-large {
   max-height: 450px;
 }
 /* ========================================================================
    Component: Text
  ========================================================================== */
 /* Style modifiers
  ========================================================================== */
 .uk-text-lead {
   font-size: 1.5rem;
   line-height: 1.5;
   color: #333;
 }
 .uk-text-meta {
   font-size: 0.875rem;
   line-height: 1.4;
   color: #999;
 }
 .uk-text-meta a {
   color: #999;
 }
 .uk-text-meta a:hover {
   color: #666;
   text-decoration: none;
 }
 /* Size modifiers
  ========================================================================== */
 .uk-text-small {
   font-size: 0.875rem;
   line-height: 1.5;
 }
 .uk-text-large {
   font-size: 1.5rem;
   line-height: 1.5;
 }
 .uk-text-default {
   font-size: 16px;
   line-height: 1.5;
 }
 /* Weight modifier
  ========================================================================== */
 .uk-text-light {
   font-weight: 300;
 }
 .uk-text-normal {
   font-weight: 400;
 }
 .uk-text-bold {
   font-weight: 700;
 }
 .uk-text-lighter {
   font-weight: lighter;
 }
 .uk-text-bolder {
   font-weight: bolder;
 }
 /* Style modifier
  ========================================================================== */
 .uk-text-italic {
   font-style: italic;
 }
 /* Transform modifier
  ========================================================================== */
 .uk-text-capitalize {
   text-transform: capitalize !important;
 }
 .uk-text-uppercase {
   text-transform: uppercase !important;
 }
 .uk-text-lowercase {
   text-transform: lowercase !important;
 }
 /* Color modifiers
  ========================================================================== */
 .uk-text-muted {
   color: #999 !important;
 }
 .uk-text-emphasis {
   color: #333 !important;
 }
 .uk-text-primary {
   color: #1e87f0 !important;
 }
 .uk-text-secondary {
   color: #222 !important;
 }
 .uk-text-success {
   color: #32d296 !important;
 }
 .uk-text-warning {
   color: #faa05a !important;
 }
 .uk-text-danger {
   color: #f0506e !important;
 }
 /* Background modifier
  ========================================================================== */
 /*
  * 1. The background clips to the foreground text. Works in Chrome, Firefox, Safari, Edge and Opera
  *    Default color is set to transparent
  * 2. Container fits the text
  * 3. Fallback color for IE11
  */
 .uk-text-background {
   /* 1 */
   -webkit-background-clip: text;
   /* 2 */
   display: inline-block;
   /* 3 */
   color: #1e87f0 !important;
 }
 @supports (-webkit-background-clip: text) {
   .uk-text-background {
     background-color: #1e87f0;
     color: transparent !important;
   }
 }
 /* Alignment modifiers
  ========================================================================== */
 .uk-text-left {
   text-align: left !important;
 }
 .uk-text-right {
   text-align: right !important;
 }
 .uk-text-center {
   text-align: center !important;
 }
 .uk-text-justify {
   text-align: justify !important;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   .uk-text-left\@s {
     text-align: left !important;
   }
   .uk-text-right\@s {
     text-align: right !important;
   }
   .uk-text-center\@s {
     text-align: center !important;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-text-left\@m {
     text-align: left !important;
   }
   .uk-text-right\@m {
     text-align: right !important;
   }
   .uk-text-center\@m {
     text-align: center !important;
   }
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-text-left\@l {
     text-align: left !important;
   }
   .uk-text-right\@l {
     text-align: right !important;
   }
   .uk-text-center\@l {
     text-align: center !important;
   }
 }
 /* Large screen and bigger */
 @media (min-width: 1600px) {
   .uk-text-left\@xl {
     text-align: left !important;
   }
   .uk-text-right\@xl {
     text-align: right !important;
   }
   .uk-text-center\@xl {
     text-align: center !important;
   }
 }
 /*
  * Vertical
  */
 .uk-text-top {
   vertical-align: top !important;
 }
 .uk-text-middle {
   vertical-align: middle !important;
 }
 .uk-text-bottom {
   vertical-align: bottom !important;
 }
 .uk-text-baseline {
   vertical-align: baseline !important;
 }
 /* Wrap modifiers
  ========================================================================== */
 /*
  * Prevent text from wrapping onto multiple lines
  */
 .uk-text-nowrap {
   white-space: nowrap;
 }
 /*
  * 1. Make sure a max-width is set after which truncation can occur
  * 2. Prevent text from wrapping onto multiple lines, and truncate with an ellipsis
  * 3. Fix for table cells
  */
 .uk-text-truncate {
   /* 1 */
   max-width: 100%;
   /* 2 */
   overflow: hidden;
   text-overflow: ellipsis;
   white-space: nowrap;
 }
 /* 2 */
 th.uk-text-truncate,
 td.uk-text-truncate {
   max-width: 0;
 }
 /*
  * 1. Wrap long words onto the next line and break them if they are too long to fit
  * 2. Legacy `word-wrap` as fallback for `overflow-wrap`
  * 3. Fix `overflow-wrap` which doesn't work with table cells in Chrome, Opera, IE11 and Edge
  *    Must use `break-all` to support IE11 and Edge
  * Note: Not using `hyphens: auto;` because it hyphenates text even if not needed
  */
 .uk-text-break {
   /* 1 */
   overflow-wrap: break-word;
   /* 2 */
   word-wrap: break-word;
 }
 /* 3 */
 th.uk-text-break,
 td.uk-text-break {
   word-break: break-all;
 }
 /* ========================================================================
    Component: Column
  ========================================================================== */
 [class*='uk-column-'] {
   column-gap: 30px;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   [class*='uk-column-'] {
     column-gap: 40px;
   }
 }
 /*
  * Fix image 1px line wrapping into the next column in Chrome
  */
 [class*='uk-column-'] img {
   transform: translate3d(0, 0, 0);
 }
 /* Divider
  ========================================================================== */
 /*
  * 1. Double the column gap
  */
 .uk-column-divider {
   column-rule: 1px solid #e5e5e5;
   /* 1 */
   column-gap: 60px;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-column-divider {
     column-gap: 80px;
   }
 }
 /* Width modifiers
  ========================================================================== */
 .uk-column-1-2 {
   column-count: 2;
 }
 .uk-column-1-3 {
   column-count: 3;
 }
 .uk-column-1-4 {
   column-count: 4;
 }
 .uk-column-1-5 {
   column-count: 5;
 }
 .uk-column-1-6 {
   column-count: 6;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   .uk-column-1-2\@s {
     column-count: 2;
   }
   .uk-column-1-3\@s {
     column-count: 3;
   }
   .uk-column-1-4\@s {
     column-count: 4;
   }
   .uk-column-1-5\@s {
     column-count: 5;
   }
   .uk-column-1-6\@s {
     column-count: 6;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-column-1-2\@m {
     column-count: 2;
   }
   .uk-column-1-3\@m {
     column-count: 3;
   }
   .uk-column-1-4\@m {
     column-count: 4;
   }
   .uk-column-1-5\@m {
     column-count: 5;
   }
   .uk-column-1-6\@m {
     column-count: 6;
   }
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-column-1-2\@l {
     column-count: 2;
   }
   .uk-column-1-3\@l {
     column-count: 3;
   }
   .uk-column-1-4\@l {
     column-count: 4;
   }
   .uk-column-1-5\@l {
     column-count: 5;
   }
   .uk-column-1-6\@l {
     column-count: 6;
   }
 }
 /* Large screen and bigger */
 @media (min-width: 1600px) {
   .uk-column-1-2\@xl {
     column-count: 2;
   }
   .uk-column-1-3\@xl {
     column-count: 3;
   }
   .uk-column-1-4\@xl {
     column-count: 4;
   }
   .uk-column-1-5\@xl {
     column-count: 5;
   }
   .uk-column-1-6\@xl {
     column-count: 6;
   }
 }
 /* Make element span across all columns
  * Does not work in Firefox yet
  ========================================================================== */
 .uk-column-span {
   column-span: all;
 }
 /* ========================================================================
    Component: Cover
  ========================================================================== */
 /*
  * Works with iframes and embedded content
  * 1. Reset responsiveness for embedded content
  * 2. Center object
  * Note: Percent values on the `top` property only works if this element
  *       is absolute positioned or if the container has a height
  */
 .uk-cover {
   /* 1 */
   max-width: none;
   /* 2 */
   position: absolute;
   left: 50%;
   top: 50%;
   transform: translate(-50%, -50%);
 }
 iframe.uk-cover {
   pointer-events: none;
 }
 /* Container
  ========================================================================== */
 /*
  * 1. Parent container which clips resized object
  * 2. Needed if the child is positioned absolute. See note above
  */
 .uk-cover-container {
   /* 1 */
   overflow: hidden;
   /* 2 */
   position: relative;
 }
 /* ========================================================================
    Component: Background
  ========================================================================== */
 /* Color
  ========================================================================== */
 .uk-background-default {
   background-color: #fff;
 }
 .uk-background-muted {
   background-color: #f8f8f8;
 }
 .uk-background-primary {
   background-color: #1e87f0;
 }
 .uk-background-secondary {
   background-color: #222;
 }
 /* Size
  ========================================================================== */
 .uk-background-cover,
 .uk-background-contain,
 .uk-background-width-1-1,
 .uk-background-height-1-1 {
   background-position: 50% 50%;
   background-repeat: no-repeat;
 }
 .uk-background-cover {
   background-size: cover;
 }
 .uk-background-contain {
   background-size: contain;
 }
 .uk-background-width-1-1 {
   background-size: 100%;
 }
 .uk-background-height-1-1 {
   background-size: auto 100%;
 }
 /* Position
  ========================================================================== */
 .uk-background-top-left {
   background-position: 0 0;
 }
 .uk-background-top-center {
   background-position: 50% 0;
 }
 .uk-background-top-right {
   background-position: 100% 0;
 }
 .uk-background-center-left {
   background-position: 0 50%;
 }
 .uk-background-center-center {
   background-position: 50% 50%;
 }
 .uk-background-center-right {
   background-position: 100% 50%;
 }
 .uk-background-bottom-left {
   background-position: 0 100%;
 }
 .uk-background-bottom-center {
   background-position: 50% 100%;
 }
 .uk-background-bottom-right {
   background-position: 100% 100%;
 }
 /* Repeat
  ========================================================================== */
 .uk-background-norepeat {
   background-repeat: no-repeat;
 }
 /* Attachment
  ========================================================================== */
 /*
  * 1. Fix bug introduced in Chrome 67: the background image is not visible if any element on the page uses `translate3d`
  */
 .uk-background-fixed {
   background-attachment: fixed;
   /* 1 */
   backface-visibility: hidden;
 }
 /*
  * Exclude touch devices because `fixed` doesn't work on iOS and Android
  */
 @media (pointer: coarse) {
   .uk-background-fixed {
     background-attachment: scroll;
   }
 }
 /* Image
  ========================================================================== */
 /* Phone portrait and smaller */
 @media (max-width: 639px) {
   .uk-background-image\@s {
     background-image: none !important;
   }
 }
 /* Phone landscape and smaller */
 @media (max-width: 959px) {
   .uk-background-image\@m {
     background-image: none !important;
   }
 }
 /* Tablet landscape and smaller */
 @media (max-width: 1199px) {
   .uk-background-image\@l {
     background-image: none !important;
   }
 }
 /* Desktop and smaller */
 @media (max-width: 1599px) {
   .uk-background-image\@xl {
     background-image: none !important;
   }
 }
 /* Blend modes
  ========================================================================== */
 .uk-background-blend-multiply {
   background-blend-mode: multiply;
 }
 .uk-background-blend-screen {
   background-blend-mode: screen;
 }
 .uk-background-blend-overlay {
   background-blend-mode: overlay;
 }
 .uk-background-blend-darken {
   background-blend-mode: darken;
 }
 .uk-background-blend-lighten {
   background-blend-mode: lighten;
 }
 .uk-background-blend-color-dodge {
   background-blend-mode: color-dodge;
 }
 .uk-background-blend-color-burn {
   background-blend-mode: color-burn;
 }
 .uk-background-blend-hard-light {
   background-blend-mode: hard-light;
 }
 .uk-background-blend-soft-light {
   background-blend-mode: soft-light;
 }
 .uk-background-blend-difference {
   background-blend-mode: difference;
 }
 .uk-background-blend-exclusion {
   background-blend-mode: exclusion;
 }
 .uk-background-blend-hue {
   background-blend-mode: hue;
 }
 .uk-background-blend-saturation {
   background-blend-mode: saturation;
 }
 .uk-background-blend-color {
   background-blend-mode: color;
 }
 .uk-background-blend-luminosity {
   background-blend-mode: luminosity;
 }
 /* ========================================================================
    Component: Align
  ========================================================================== */
 /*
  * Default
  */
 [class*='uk-align'] {
   display: block;
   margin-bottom: 30px;
 }
 * + [class*='uk-align'] {
   margin-top: 30px;
 }
 /*
  * Center
  */
 .uk-align-center {
   margin-left: auto;
   margin-right: auto;
 }
 /*
  * Left/Right
  */
 .uk-align-left {
   margin-top: 0;
   margin-right: 30px;
   float: left;
 }
 .uk-align-right {
   margin-top: 0;
   margin-left: 30px;
   float: right;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   .uk-align-left\@s {
     margin-top: 0;
     margin-right: 30px;
     float: left;
   }
   .uk-align-right\@s {
     margin-top: 0;
     margin-left: 30px;
     float: right;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-align-left\@m {
     margin-top: 0;
     margin-right: 30px;
     float: left;
   }
   .uk-align-right\@m {
     margin-top: 0;
     margin-left: 30px;
     float: right;
   }
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-align-left\@l {
     margin-top: 0;
     float: left;
   }
   .uk-align-right\@l {
     margin-top: 0;
     float: right;
   }
   .uk-align-left,
   .uk-align-left\@s,
   .uk-align-left\@m,
   .uk-align-left\@l {
     margin-right: 40px;
   }
   .uk-align-right,
   .uk-align-right\@s,
   .uk-align-right\@m,
   .uk-align-right\@l {
     margin-left: 40px;
   }
 }
 /* Large screen and bigger */
 @media (min-width: 1600px) {
   .uk-align-left\@xl {
     margin-top: 0;
     margin-right: 40px;
     float: left;
   }
   .uk-align-right\@xl {
     margin-top: 0;
     margin-left: 40px;
     float: right;
   }
 }
 /* ========================================================================
    Component: SVG
  ========================================================================== */
 /*
  * 1. Fill all SVG elements with the current text color if no `fill` attribute is set
  * 2. Set the fill and stroke color of all SVG elements to the current text color
  */
 /* 1 */
 .uk-svg,
 .uk-svg:not(.uk-preserve) [fill*='#']:not(.uk-preserve) {
   fill: currentcolor;
 }
 .uk-svg:not(.uk-preserve) [stroke*='#']:not(.uk-preserve) {
   stroke: currentcolor;
 }
 /*
  * Fix Firefox blurry SVG rendering: https://bugzilla.mozilla.org/show_bug.cgi?id=1046835
  */
 .uk-svg {
   transform: translate(0, 0);
 }
 /* ========================================================================
    Component: Utility
  ========================================================================== */
 /* Panel
  ========================================================================== */
 .uk-panel {
   display: flow-root;
   position: relative;
   box-sizing: border-box;
 }
 /*
  * Remove margin from the last-child
  */
 .uk-panel > :last-child {
   margin-bottom: 0;
 }
 /*
  * Scrollable
  */
 .uk-panel-scrollable {
   height: 170px;
   padding: 10px;
   border: 1px solid #e5e5e5;
   overflow: auto;
   -webkit-overflow-scrolling: touch;
   resize: both;
 }
 /* Clearfix
  ========================================================================== */
 /*
  * 1. `table-cell` is used with `::before` because `table` creates a 1px gap when it becomes a flex item, only in Webkit
  * 2. `table` is used again with `::after` because `clear` only works with block elements.
  * Note: `display: block` with `overflow: hidden` is currently not working in the latest Safari
  */
 /* 1 */
 .uk-clearfix::before {
   content: "";
   display: table-cell;
 }
 /* 2 */
 .uk-clearfix::after {
   content: "";
   display: table;
   clear: both;
 }
 /* Float
  ========================================================================== */
 /*
  * 1. Prevent content overflow
  */
 .uk-float-left {
   float: left;
 }
 .uk-float-right {
   float: right;
 }
 /* 1 */
 [class*='uk-float-'] {
   max-width: 100%;
 }
 /* Overfow
  ========================================================================== */
 .uk-overflow-hidden {
   overflow: hidden;
 }
 /*
  * Enable scrollbars if content is clipped
  * Note: Firefox ignores `padding-bottom` for the scrollable overflow https://bugzilla.mozilla.org/show_bug.cgi?id=748518
  */
 .uk-overflow-auto {
   overflow: auto;
   -webkit-overflow-scrolling: touch;
 }
 .uk-overflow-auto > :last-child {
   margin-bottom: 0;
 }
 /* Resize
  ========================================================================== */
 .uk-resize {
   resize: both;
 }
 .uk-resize-vertical {
   resize: vertical;
 }
 /* Display
  ========================================================================== */
 .uk-display-block {
   display: block !important;
 }
 .uk-display-inline {
   display: inline !important;
 }
 .uk-display-inline-block {
   display: inline-block !important;
 }
 /* Inline
  ========================================================================== */
 /*
  * 1. Container fits its content
  * 2. Create position context
  * 3. Prevent content overflow
  * 4. Behave like most inline-block elements
  * 5. Force hardware acceleration without creating a new stacking context
  *    to fix 1px glitch when combined with overlays and transitions in Webkit
  * 6. Clip child elements
  */
 [class*='uk-inline'] {
   /* 1 */
   display: inline-block;
   /* 2 */
   position: relative;
   /* 3 */
   max-width: 100%;
   /* 4 */
   vertical-align: middle;
   /* 5 */
   -webkit-backface-visibility: hidden;
 }
 .uk-inline-clip {
   /* 6 */
   overflow: hidden;
 }
 /* Responsive objects
  ========================================================================== */
 /*
  * Preserve original dimensions
  * Because `img, `video`, `canvas` and  `audio` are already responsive by default, see Base component
  */
 .uk-preserve-width,
 .uk-preserve-width canvas,
 .uk-preserve-width img,
 .uk-preserve-width svg,
 .uk-preserve-width video {
   max-width: none;
 }
 /*
  * Responsiveness
  * Corrects `max-width` and `max-height` behavior if padding and border are used
  */
 .uk-responsive-width,
 .uk-responsive-height {
   box-sizing: border-box;
 }
 /*
  * 1. Set a maximum width. `important` needed to override `uk-preserve-width img`
  * 2. Auto scale the height. Only needed if `height` attribute is present
  */
 .uk-responsive-width {
   /* 1 */
   max-width: 100% !important;
   /* 2 */
   height: auto;
 }
 /*
  * 1. Set a maximum height. Only works if the parent element has a fixed height
  * 2. Auto scale the width. Only needed if `width` attribute is present
  * 3. Reset max-width, which `img, `video`, `canvas` and  `audio` already have by default
  */
 .uk-responsive-height {
   /* 1 */
   max-height: 100%;
   /* 2 */
   width: auto;
   /* 3 */
   max-width: none;
 }
 /* Border
  ========================================================================== */
 .uk-border-circle {
   border-radius: 50%;
 }
 .uk-border-pill {
   border-radius: 500px;
 }
 .uk-border-rounded {
   border-radius: 5px;
 }
 /*
  * Fix `overflow: hidden` to be ignored with border-radius and CSS transforms in Webkit
  */
 .uk-inline-clip[class*='uk-border-'] {
   -webkit-transform: translateZ(0);
 }
 /* Box-shadow
  ========================================================================== */
 .uk-box-shadow-small {
   box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
 }
 .uk-box-shadow-medium {
   box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
 }
 .uk-box-shadow-large {
   box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
 }
 .uk-box-shadow-xlarge {
   box-shadow: 0 28px 50px rgba(0, 0, 0, 0.16);
 }
 /*
  * Hover
  */
 [class*='uk-box-shadow-hover'] {
   transition: box-shadow 0.1s ease-in-out;
 }
 .uk-box-shadow-hover-small:hover {
   box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
 }
 .uk-box-shadow-hover-medium:hover {
   box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
 }
 .uk-box-shadow-hover-large:hover {
   box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
 }
 .uk-box-shadow-hover-xlarge:hover {
   box-shadow: 0 28px 50px rgba(0, 0, 0, 0.16);
 }
 /* Box-shadow bottom
  ========================================================================== */
 /*
  * 1. Set position.
  * 2. Set style
  * 3. Blur doesn't work on pseudo elements with negative `z-index` in Edge.
  *    Solved by using `before` and add position context to child elements.
  */
 @supports (filter: blur(0)) {
   .uk-box-shadow-bottom {
     display: inline-block;
     position: relative;
     max-width: 100%;
     vertical-align: middle;
   }
   .uk-box-shadow-bottom::before {
     content: '';
     /* 1 */
     position: absolute;
     bottom: -30px;
     left: 0;
     right: 0;
     /* 2 */
     height: 30px;
     border-radius: 100%;
     background: #444;
     filter: blur(20px);
   }
   /* 3 */
   .uk-box-shadow-bottom > * {
     position: relative;
   }
 }
 /* Drop cap
  ========================================================================== */
 /*
  * 1. Firefox doesn't apply `::first-letter` if the first letter is inside child elements
  *    https://bugzilla.mozilla.org/show_bug.cgi?id=214004
  * 2. In Firefox, a floating `::first-letter` doesn't have a line box and there for no `line-height`
  *    https://bugzilla.mozilla.org/show_bug.cgi?id=317933
  * 3. Caused by 1.: Edge creates two nested `::first-letter` containers, one for each selector
  *    This doubles the `font-size` exponential when using the `em` unit.
  */
 .uk-dropcap::first-letter,
 .uk-dropcap > p:first-of-type::first-letter {
   display: block;
   margin-right: 10px;
   float: left;
   font-size: 4.5em;
   line-height: 1;
   margin-bottom: -2px;
 }
 /* 2 */
 @-moz-document url-prefix() {
   .uk-dropcap::first-letter,
   .uk-dropcap > p:first-of-type::first-letter {
     margin-top: 1.1%;
   }
 }
 /* 3 */
 @supports (-ms-ime-align: auto) {
   .uk-dropcap > p:first-of-type::first-letter {
     font-size: 1em;
   }
 }
 /* Logo
  ========================================================================== */
 /*
  * 1. Required for `a`
  */
 .uk-logo {
   font-size: 1.5rem;
   font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
   color: #666;
   /* 1 */
   text-decoration: none;
 }
 /* Hover + Focus */
 .uk-logo:hover,
 .uk-logo:focus {
   color: #666;
   outline: none;
   /* 1 */
   text-decoration: none;
 }
 .uk-logo-inverse {
   display: none;
 }
 /* Disabled State
  ========================================================================== */
 .uk-disabled {
   pointer-events: none;
 }
 /* Drag State
  ========================================================================== */
 /*
  * 1. Needed if moving over elements with have their own cursor on hover, e.g. links or buttons
  * 2. Fix dragging over iframes
  */
 .uk-drag,
 .uk-drag * {
   cursor: move;
 }
 /* 2 */
 .uk-drag iframe {
   pointer-events: none;
 }
 /* Dragover State
  ========================================================================== */
 /*
  * Create a box-shadow when dragging a file over the upload area
  */
 .uk-dragover {
   box-shadow: 0 0 20px rgba(100, 100, 100, 0.3);
 }
 /* Blend modes
  ========================================================================== */
 .uk-blend-multiply {
   mix-blend-mode: multiply;
 }
 .uk-blend-screen {
   mix-blend-mode: screen;
 }
 .uk-blend-overlay {
   mix-blend-mode: overlay;
 }
 .uk-blend-darken {
   mix-blend-mode: darken;
 }
 .uk-blend-lighten {
   mix-blend-mode: lighten;
 }
 .uk-blend-color-dodge {
   mix-blend-mode: color-dodge;
 }
 .uk-blend-color-burn {
   mix-blend-mode: color-burn;
 }
 .uk-blend-hard-light {
   mix-blend-mode: hard-light;
 }
 .uk-blend-soft-light {
   mix-blend-mode: soft-light;
 }
 .uk-blend-difference {
   mix-blend-mode: difference;
 }
 .uk-blend-exclusion {
   mix-blend-mode: exclusion;
 }
 .uk-blend-hue {
   mix-blend-mode: hue;
 }
 .uk-blend-saturation {
   mix-blend-mode: saturation;
 }
 .uk-blend-color {
   mix-blend-mode: color;
 }
 .uk-blend-luminosity {
   mix-blend-mode: luminosity;
 }
 /* Transform
 ========================================================================== */
 .uk-transform-center {
   transform: translate(-50%, -50%);
 }
 /* Transform Origin
 ========================================================================== */
 .uk-transform-origin-top-left {
   transform-origin: 0 0;
 }
 .uk-transform-origin-top-center {
   transform-origin: 50% 0;
 }
 .uk-transform-origin-top-right {
   transform-origin: 100% 0;
 }
 .uk-transform-origin-center-left {
   transform-origin: 0 50%;
 }
 .uk-transform-origin-center-right {
   transform-origin: 100% 50%;
 }
 .uk-transform-origin-bottom-left {
   transform-origin: 0 100%;
 }
 .uk-transform-origin-bottom-center {
   transform-origin: 50% 100%;
 }
 .uk-transform-origin-bottom-right {
   transform-origin: 100% 100%;
 }
 /* ========================================================================
    Component: Flex
  ========================================================================== */
 .uk-flex {
   display: flex;
 }
 .uk-flex-inline {
   display: inline-flex;
 }
 /*
  * Remove pseudo elements created by micro clearfix as precaution
  */
 .uk-flex::before,
 .uk-flex::after,
 .uk-flex-inline::before,
 .uk-flex-inline::after {
   display: none;
 }
 /* Alignment
  ========================================================================== */
 /*
  * Align items along the main axis of the current line of the flex container
  * Row: Horizontal
  */
 .uk-flex-left {
   justify-content: flex-start;
 }
 .uk-flex-center {
   justify-content: center;
 }
 .uk-flex-right {
   justify-content: flex-end;
 }
 .uk-flex-between {
   justify-content: space-between;
 }
 .uk-flex-around {
   justify-content: space-around;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   .uk-flex-left\@s {
     justify-content: flex-start;
   }
   .uk-flex-center\@s {
     justify-content: center;
   }
   .uk-flex-right\@s {
     justify-content: flex-end;
   }
   .uk-flex-between\@s {
     justify-content: space-between;
   }
   .uk-flex-around\@s {
     justify-content: space-around;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-flex-left\@m {
     justify-content: flex-start;
   }
   .uk-flex-center\@m {
     justify-content: center;
   }
   .uk-flex-right\@m {
     justify-content: flex-end;
   }
   .uk-flex-between\@m {
     justify-content: space-between;
   }
   .uk-flex-around\@m {
     justify-content: space-around;
   }
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-flex-left\@l {
     justify-content: flex-start;
   }
   .uk-flex-center\@l {
     justify-content: center;
   }
   .uk-flex-right\@l {
     justify-content: flex-end;
   }
   .uk-flex-between\@l {
     justify-content: space-between;
   }
   .uk-flex-around\@l {
     justify-content: space-around;
   }
 }
 /* Large screen and bigger */
 @media (min-width: 1600px) {
   .uk-flex-left\@xl {
     justify-content: flex-start;
   }
   .uk-flex-center\@xl {
     justify-content: center;
   }
   .uk-flex-right\@xl {
     justify-content: flex-end;
   }
   .uk-flex-between\@xl {
     justify-content: space-between;
   }
   .uk-flex-around\@xl {
     justify-content: space-around;
   }
 }
 /*
  * Align items in the cross axis of the current line of the flex container
  * Row: Vertical
  */
 .uk-flex-stretch {
   align-items: stretch;
 }
 .uk-flex-top {
   align-items: flex-start;
 }
 .uk-flex-middle {
   align-items: center;
 }
 .uk-flex-bottom {
   align-items: flex-end;
 }
 /* Direction
  ========================================================================== */
 .uk-flex-row {
   flex-direction: row;
 }
 .uk-flex-row-reverse {
   flex-direction: row-reverse;
 }
 .uk-flex-column {
   flex-direction: column;
 }
 .uk-flex-column-reverse {
   flex-direction: column-reverse;
 }
 /* Wrap
  ========================================================================== */
 .uk-flex-nowrap {
   flex-wrap: nowrap;
 }
 .uk-flex-wrap {
   flex-wrap: wrap;
 }
 .uk-flex-wrap-reverse {
   flex-wrap: wrap-reverse;
 }
 /*
  * Aligns items within the flex container when there is extra space in the cross-axis
  * Only works if there is more than one line of flex items
  */
 .uk-flex-wrap-stretch {
   align-content: stretch;
 }
 .uk-flex-wrap-top {
   align-content: flex-start;
 }
 .uk-flex-wrap-middle {
   align-content: center;
 }
 .uk-flex-wrap-bottom {
   align-content: flex-end;
 }
 .uk-flex-wrap-between {
   align-content: space-between;
 }
 .uk-flex-wrap-around {
   align-content: space-around;
 }
 /* Item ordering
  ========================================================================== */
 /*
  * Default is 0
  */
 .uk-flex-first {
   order: -1;
 }
 .uk-flex-last {
   order: 99;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   .uk-flex-first\@s {
     order: -1;
   }
   .uk-flex-last\@s {
     order: 99;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-flex-first\@m {
     order: -1;
   }
   .uk-flex-last\@m {
     order: 99;
   }
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-flex-first\@l {
     order: -1;
   }
   .uk-flex-last\@l {
     order: 99;
   }
 }
 /* Large screen and bigger */
 @media (min-width: 1600px) {
   .uk-flex-first\@xl {
     order: -1;
   }
   .uk-flex-last\@xl {
     order: 99;
   }
 }
 /* Item dimensions
  ========================================================================== */
 /*
  * Initial: 0 1 auto
  * Content dimensions, but shrinks
  */
 /*
  * No Flex: 0 0 auto
  * Content dimensions
  */
 .uk-flex-none {
   flex: none;
 }
 /*
  * Relative Flex: 1 1 auto
  * Space is allocated considering content
  */
 .uk-flex-auto {
   flex: auto;
 }
 /*
  * Absolute Flex: 1 1 0%
  * Space is allocated solely based on flex
  */
 .uk-flex-1 {
   flex: 1;
 }
 /* ========================================================================
    Component: Margin
  ========================================================================== */
 /*
  * Default
  */
 .uk-margin {
   margin-bottom: 20px;
 }
 * + .uk-margin {
   margin-top: 20px !important;
 }
 .uk-margin-top {
   margin-top: 20px !important;
 }
 .uk-margin-bottom {
   margin-bottom: 20px !important;
 }
 .uk-margin-left {
   margin-left: 20px !important;
 }
 .uk-margin-right {
   margin-right: 20px !important;
 }
 /* Small
  ========================================================================== */
 .uk-margin-small {
   margin-bottom: 10px;
 }
 * + .uk-margin-small {
   margin-top: 10px !important;
 }
 .uk-margin-small-top {
   margin-top: 10px !important;
 }
 .uk-margin-small-bottom {
   margin-bottom: 10px !important;
 }
 .uk-margin-small-left {
   margin-left: 10px !important;
 }
 .uk-margin-small-right {
   margin-right: 10px !important;
 }
 /* Medium
  ========================================================================== */
 .uk-margin-medium {
   margin-bottom: 40px;
 }
 * + .uk-margin-medium {
   margin-top: 40px !important;
 }
 .uk-margin-medium-top {
   margin-top: 40px !important;
 }
 .uk-margin-medium-bottom {
   margin-bottom: 40px !important;
 }
 .uk-margin-medium-left {
   margin-left: 40px !important;
 }
 .uk-margin-medium-right {
   margin-right: 40px !important;
 }
 /* Large
  ========================================================================== */
 .uk-margin-large {
   margin-bottom: 40px;
 }
 * + .uk-margin-large {
   margin-top: 40px !important;
 }
 .uk-margin-large-top {
   margin-top: 40px !important;
 }
 .uk-margin-large-bottom {
   margin-bottom: 40px !important;
 }
 .uk-margin-large-left {
   margin-left: 40px !important;
 }
 .uk-margin-large-right {
   margin-right: 40px !important;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-margin-large {
     margin-bottom: 70px;
   }
   * + .uk-margin-large {
     margin-top: 70px !important;
   }
   .uk-margin-large-top {
     margin-top: 70px !important;
   }
   .uk-margin-large-bottom {
     margin-bottom: 70px !important;
   }
   .uk-margin-large-left {
     margin-left: 70px !important;
   }
   .uk-margin-large-right {
     margin-right: 70px !important;
   }
 }
 /* XLarge
  ========================================================================== */
 .uk-margin-xlarge {
   margin-bottom: 70px;
 }
 * + .uk-margin-xlarge {
   margin-top: 70px !important;
 }
 .uk-margin-xlarge-top {
   margin-top: 70px !important;
 }
 .uk-margin-xlarge-bottom {
   margin-bottom: 70px !important;
 }
 .uk-margin-xlarge-left {
   margin-left: 70px !important;
 }
 .uk-margin-xlarge-right {
   margin-right: 70px !important;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-margin-xlarge {
     margin-bottom: 140px;
   }
   * + .uk-margin-xlarge {
     margin-top: 140px !important;
   }
   .uk-margin-xlarge-top {
     margin-top: 140px !important;
   }
   .uk-margin-xlarge-bottom {
     margin-bottom: 140px !important;
   }
   .uk-margin-xlarge-left {
     margin-left: 140px !important;
   }
   .uk-margin-xlarge-right {
     margin-right: 140px !important;
   }
 }
 /* Auto
  ========================================================================== */
 .uk-margin-auto {
   margin-left: auto !important;
   margin-right: auto !important;
 }
 .uk-margin-auto-top {
   margin-top: auto !important;
 }
 .uk-margin-auto-bottom {
   margin-bottom: auto !important;
 }
 .uk-margin-auto-left {
   margin-left: auto !important;
 }
 .uk-margin-auto-right {
   margin-right: auto !important;
 }
 .uk-margin-auto-vertical {
   margin-top: auto !important;
   margin-bottom: auto !important;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   .uk-margin-auto\@s {
     margin-left: auto !important;
     margin-right: auto !important;
   }
   .uk-margin-auto-left\@s {
     margin-left: auto !important;
   }
   .uk-margin-auto-right\@s {
     margin-right: auto !important;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-margin-auto\@m {
     margin-left: auto !important;
     margin-right: auto !important;
   }
   .uk-margin-auto-left\@m {
     margin-left: auto !important;
   }
   .uk-margin-auto-right\@m {
     margin-right: auto !important;
   }
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-margin-auto\@l {
     margin-left: auto !important;
     margin-right: auto !important;
   }
   .uk-margin-auto-left\@l {
     margin-left: auto !important;
   }
   .uk-margin-auto-right\@l {
     margin-right: auto !important;
   }
 }
 /* Large screen and bigger */
 @media (min-width: 1600px) {
   .uk-margin-auto\@xl {
     margin-left: auto !important;
     margin-right: auto !important;
   }
   .uk-margin-auto-left\@xl {
     margin-left: auto !important;
   }
   .uk-margin-auto-right\@xl {
     margin-right: auto !important;
   }
 }
 /* Remove
  ========================================================================== */
 .uk-margin-remove {
   margin: 0 !important;
 }
 .uk-margin-remove-top {
   margin-top: 0 !important;
 }
 .uk-margin-remove-bottom {
   margin-bottom: 0 !important;
 }
 .uk-margin-remove-left {
   margin-left: 0 !important;
 }
 .uk-margin-remove-right {
   margin-right: 0 !important;
 }
 .uk-margin-remove-vertical {
   margin-top: 0 !important;
   margin-bottom: 0 !important;
 }
 .uk-margin-remove-adjacent + *,
 .uk-margin-remove-first-child > :first-child {
   margin-top: 0 !important;
 }
 .uk-margin-remove-last-child > :last-child {
   margin-bottom: 0 !important;
 }
 /* Phone landscape and bigger */
 @media (min-width: 640px) {
   .uk-margin-remove-left\@s {
     margin-left: 0 !important;
   }
   .uk-margin-remove-right\@s {
     margin-right: 0 !important;
   }
 }
 /* Tablet landscape and bigger */
 @media (min-width: 960px) {
   .uk-margin-remove-left\@m {
     margin-left: 0 !important;
   }
   .uk-margin-remove-right\@m {
     margin-right: 0 !important;
   }
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-margin-remove-left\@l {
     margin-left: 0 !important;
   }
   .uk-margin-remove-right\@l {
     margin-right: 0 !important;
   }
 }
 /* Large screen and bigger */
 @media (min-width: 1600px) {
   .uk-margin-remove-left\@xl {
     margin-left: 0 !important;
   }
   .uk-margin-remove-right\@xl {
     margin-right: 0 !important;
   }
 }
 /* ========================================================================
    Component: Padding
  ========================================================================== */
 .uk-padding {
   padding: 30px;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-padding {
     padding: 40px;
   }
 }
 /* Small
  ========================================================================== */
 .uk-padding-small {
   padding: 15px;
 }
 /* Large
  ========================================================================== */
 .uk-padding-large {
   padding: 30px;
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-padding-large {
     padding: 70px;
   }
 }
 /* Remove
  ========================================================================== */
 .uk-padding-remove {
   padding: 0 !important;
 }
 .uk-padding-remove-top {
   padding-top: 0 !important;
 }
 .uk-padding-remove-bottom {
   padding-bottom: 0 !important;
 }
 .uk-padding-remove-left {
   padding-left: 0 !important;
 }
 .uk-padding-remove-right {
   padding-right: 0 !important;
 }
 .uk-padding-remove-vertical {
   padding-top: 0 !important;
   padding-bottom: 0 !important;
 }
 .uk-padding-remove-horizontal {
   padding-left: 0 !important;
   padding-right: 0 !important;
 }
 /* ========================================================================
    Component: Position
  ========================================================================== */
 /* Directions
  ========================================================================== */
 /*
  * 1. Prevent content overflow if `max-width: 100%` is used inside position container.
  */
 [class*='uk-position-top'],
 [class*='uk-position-bottom'],
 [class*='uk-position-left'],
 [class*='uk-position-right'],
 [class*='uk-position-center'] {
   position: absolute !important;
   /* 1 */
   max-width: 100%;
 }
 /* Edges
  ========================================================================== */
 /* Don't use `width: 100%` because it is wrong if the parent has padding. */
 .uk-position-top {
   top: 0;
   left: 0;
   right: 0;
 }
 .uk-position-bottom {
   bottom: 0;
   left: 0;
   right: 0;
 }
 .uk-position-left {
   top: 0;
   bottom: 0;
   left: 0;
 }
 .uk-position-right {
   top: 0;
   bottom: 0;
   right: 0;
 }
 /* Corners
  ========================================================================== */
 .uk-position-top-left {
   top: 0;
   left: 0;
 }
 .uk-position-top-right {
   top: 0;
   right: 0;
 }
 .uk-position-bottom-left {
   bottom: 0;
   left: 0;
 }
 .uk-position-bottom-right {
   bottom: 0;
   right: 0;
 }
 /*
  * Center
  * 1. Fix text wrapping if content is larger than 50% of the container.
  */
 .uk-position-center {
   top: 50%;
   left: 50%;
   transform: translate(-50%, -50%);
   /* 1 */
   width: max-content;
   max-width: 100%;
   box-sizing: border-box;
 }
 /* Vertical */
 [class*='uk-position-center-left'],
 [class*='uk-position-center-right'] {
   top: 50%;
   transform: translateY(-50%);
 }
 .uk-position-center-left {
   left: 0;
 }
 .uk-position-center-right {
   right: 0;
 }
 .uk-position-center-left-out {
   right: 100%;
   width: max-content;
 }
 .uk-position-center-right-out {
   left: 100%;
   width: max-content;
 }
 /* Horizontal */
 .uk-position-top-center,
 .uk-position-bottom-center {
   left: 50%;
   transform: translateX(-50%);
   /* 1 */
   width: max-content;
   max-width: 100%;
   box-sizing: border-box;
 }
 .uk-position-top-center {
   top: 0;
 }
 .uk-position-bottom-center {
   bottom: 0;
 }
 /* Cover
  ========================================================================== */
 .uk-position-cover {
   position: absolute;
   top: 0;
   bottom: 0;
   left: 0;
   right: 0;
 }
 /* Utility
  ========================================================================== */
 .uk-position-relative {
   position: relative !important;
 }
 .uk-position-absolute {
   position: absolute !important;
 }
 .uk-position-fixed {
   position: fixed !important;
 }
 .uk-position-z-index {
   z-index: 1;
 }
 /* Margin modifier
  ========================================================================== */
 /*
  * Small
  */
 .uk-position-small {
   max-width: calc(100% - (15px * 2));
   margin: 15px;
 }
 .uk-position-small.uk-position-center {
   transform: translate(-50%, -50%) translate(-15px, -15px);
 }
 .uk-position-small[class*='uk-position-center-left'],
 .uk-position-small[class*='uk-position-center-right'] {
   transform: translateY(-50%) translateY(-15px);
 }
 .uk-position-small.uk-position-top-center,
 .uk-position-small.uk-position-bottom-center {
   transform: translateX(-50%) translateX(-15px);
 }
 /*
  * Medium
  */
 .uk-position-medium {
   max-width: calc(100% - (30px * 2));
   margin: 30px;
 }
 .uk-position-medium.uk-position-center {
   transform: translate(-50%, -50%) translate(-30px, -30px);
 }
 .uk-position-medium[class*='uk-position-center-left'],
 .uk-position-medium[class*='uk-position-center-right'] {
   transform: translateY(-50%) translateY(-30px);
 }
 .uk-position-medium.uk-position-top-center,
 .uk-position-medium.uk-position-bottom-center {
   transform: translateX(-50%) translateX(-30px);
 }
 /*
  * Large
  */
 .uk-position-large {
   max-width: calc(100% - (30px * 2));
   margin: 30px;
 }
 .uk-position-large.uk-position-center {
   transform: translate(-50%, -50%) translate(-30px, -30px);
 }
 .uk-position-large[class*='uk-position-center-left'],
 .uk-position-large[class*='uk-position-center-right'] {
   transform: translateY(-50%) translateY(-30px);
 }
 .uk-position-large.uk-position-top-center,
 .uk-position-large.uk-position-bottom-center {
   transform: translateX(-50%) translateX(-30px);
 }
 /* Desktop and bigger */
 @media (min-width: 1200px) {
   .uk-position-large {
     max-width: calc(100% - (50px * 2));
     margin: 50px;
   }
   .uk-position-large.uk-position-center {
     transform: translate(-50%, -50%) translate(-50px, -50px);
   }
   .uk-position-large[class*='uk-position-center-left'],
   .uk-position-large[class*='uk-position-center-right'] {
     transform: translateY(-50%) translateY(-50px);
   }
   .uk-position-large.uk-position-top-center,
   .uk-position-large.uk-position-bottom-center {
     transform: translateX(-50%) translateX(-50px);
   }
 }
 /* ========================================================================
    Component: Transition
  ========================================================================== */
 /* Toggle (Hover + Focus)
  ========================================================================== */
 /*
  * 1. Prevent tab highlighting on iOS.
  */
 .uk-transition-toggle {
   /* 1 */
   -webkit-tap-highlight-color: transparent;
 }
 /*
  * Remove outline for `tabindex`
  */
 .uk-transition-toggle:focus {
   outline: none;
 }
 /* Transitions
  ========================================================================== */
 /*
  * The toggle is triggered on touch devices by two methods:
  * 1. Using `:focus` and tabindex
  * 2. Using `:hover` and a `touchstart` event listener registered on the document
  *    (Doesn't work on Surface touch devices)
  *
  * Note: Transitions don't work with `uk-postion-center-*` classes because they also use `transform`,
  *       therefore it's recommended to use an extra `div` for the transition.
  */
 .uk-transition-fade,
 [class*='uk-transition-scale'],
 [class*='uk-transition-slide'] {
   transition: 0.3s ease-out;
   transition-property: opacity, transform, filter;
   opacity: 0;
 }
 /*
  * Fade
  */
 .uk-transition-toggle:hover .uk-transition-fade,
 .uk-transition-toggle:focus .uk-transition-fade,
 .uk-transition-active.uk-active .uk-transition-fade {
   opacity: 1;
 }
 /*
  * Scale
  */
 .uk-transition-scale-up {
   transform: scale(1, 1);
 }
 .uk-transition-scale-down {
   transform: scale(1.03, 1.03);
 }
 /* Show */
 .uk-transition-toggle:hover .uk-transition-scale-up,
 .uk-transition-toggle:focus .uk-transition-scale-up,
 .uk-transition-active.uk-active .uk-transition-scale-up {
   opacity: 1;
   transform: scale(1.03, 1.03);
 }
 .uk-transition-toggle:hover .uk-transition-scale-down,
 .uk-transition-toggle:focus .uk-transition-scale-down,
 .uk-transition-active.uk-active .uk-transition-scale-down {
   opacity: 1;
   transform: scale(1, 1);
 }
 /*
  * Slide
  */
 .uk-transition-slide-top {
   transform: translateY(-100%);
 }
 .uk-transition-slide-bottom {
   transform: translateY(100%);
 }
 .uk-transition-slide-left {
   transform: translateX(-100%);
 }
 .uk-transition-slide-right {
   transform: translateX(100%);
 }
 .uk-transition-slide-top-small {
   transform: translateY(-10px);
 }
 .uk-transition-slide-bottom-small {
   transform: translateY(10px);
 }
 .uk-transition-slide-left-small {
   transform: translateX(-10px);
 }
 .uk-transition-slide-right-small {
   transform: translateX(10px);
 }
 .uk-transition-slide-top-medium {
   transform: translateY(-50px);
 }
 .uk-transition-slide-bottom-medium {
   transform: translateY(50px);
 }
 .uk-transition-slide-left-medium {
   transform: translateX(-50px);
 }
 .uk-transition-slide-right-medium {
   transform: translateX(50px);
 }
 /* Show */
 .uk-transition-toggle:hover [class*='uk-transition-slide'],
 .uk-transition-toggle:focus [class*='uk-transition-slide'],
 .uk-transition-active.uk-active [class*='uk-transition-slide'] {
   opacity: 1;
   transform: translate(0, 0);
 }
 /* Opacity modifier
  ========================================================================== */
 .uk-transition-opaque {
   opacity: 1;
 }
 /* Duration modifiers
  ========================================================================== */
 .uk-transition-slow {
   transition-duration: 0.7s;
 }

 
 .uk-light .uk-slidenav,
 .uk-section-primary:not(.uk-preserve-color) .uk-slidenav,
 .uk-section-secondary:not(.uk-preserve-color) .uk-slidenav,
 .uk-tile-primary:not(.uk-preserve-color) .uk-slidenav,
 .uk-tile-secondary:not(.uk-preserve-color) .uk-slidenav,
 .uk-card-primary.uk-card-body .uk-slidenav,
 .uk-card-primary > :not([class*='uk-card-media']) .uk-slidenav,
 .uk-card-secondary.uk-card-body .uk-slidenav,
 .uk-card-secondary > :not([class*='uk-card-media']) .uk-slidenav,
 .uk-overlay-primary .uk-slidenav,
 .uk-offcanvas-bar .uk-slidenav {
   color: rgba(255, 255, 255, 0.7);
 }
 .uk-light .uk-slidenav:hover,
 .uk-light .uk-slidenav:focus,
 .uk-section-primary:not(.uk-preserve-color) .uk-slidenav:hover,
 .uk-section-primary:not(.uk-preserve-color) .uk-slidenav:focus,
 .uk-section-secondary:not(.uk-preserve-color) .uk-slidenav:hover,
 .uk-section-secondary:not(.uk-preserve-color) .uk-slidenav:focus,
 .uk-tile-primary:not(.uk-preserve-color) .uk-slidenav:hover,
 .uk-tile-primary:not(.uk-preserve-color) .uk-slidenav:focus,
 .uk-tile-secondary:not(.uk-preserve-color) .uk-slidenav:hover,
 .uk-tile-secondary:not(.uk-preserve-color) .uk-slidenav:focus,
 .uk-card-primary.uk-card-body .uk-slidenav:hover,
 .uk-card-primary.uk-card-body .uk-slidenav:focus,
 .uk-card-primary > :not([class*='uk-card-media']) .uk-slidenav:hover,
 .uk-card-primary > :not([class*='uk-card-media']) .uk-slidenav:focus,
 .uk-card-secondary.uk-card-body .uk-slidenav:hover,
 .uk-card-secondary.uk-card-body .uk-slidenav:focus,
 .uk-card-secondary > :not([class*='uk-card-media']) .uk-slidenav:hover,
 .uk-card-secondary > :not([class*='uk-card-media']) .uk-slidenav:focus,
 .uk-overlay-primary .uk-slidenav:hover,
 .uk-overlay-primary .uk-slidenav:focus,
 .uk-offcanvas-bar .uk-slidenav:hover,
 .uk-offcanvas-bar .uk-slidenav:focus {
   color: rgba(255, 255, 255, 0.95);
 }
 .uk-light .uk-slidenav:active,
 .uk-section-primary:not(.uk-preserve-color) .uk-slidenav:active,
 .uk-section-secondary:not(.uk-preserve-color) .uk-slidenav:active,
 .uk-tile-primary:not(.uk-preserve-color) .uk-slidenav:active,
 .uk-tile-secondary:not(.uk-preserve-color) .uk-slidenav:active,
 .uk-card-primary.uk-card-body .uk-slidenav:active,
 .uk-card-primary > :not([class*='uk-card-media']) .uk-slidenav:active,
 .uk-card-secondary.uk-card-body .uk-slidenav:active,
 .uk-card-secondary > :not([class*='uk-card-media']) .uk-slidenav:active,
 .uk-overlay-primary .uk-slidenav:active,
 .uk-offcanvas-bar .uk-slidenav:active {
   color: rgba(255, 255, 255, 0.7);
 }
 